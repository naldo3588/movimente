/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import bean.AlunoBean;
import bean.CaixaBean;
import bean.ContasPagarBean;
import bean.ContasReceberBean;
import bean.ParcelasBean;
import dao.CaixaDAO;
import dao.ContasPagarDAO;
import dao.ParcelasDAO;
import de.javasoft.plaf.synthetica.SyntheticaPlainLookAndFeel;
import factory.ConexaoFactory;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import static src.JDParcelas.statusParcelas;
import java.text.NumberFormat;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import util.Limite_digitosNumeros;

/**
 *
 * @author Ronaldo Pedro
 */
public class JDLancPagarBaixa extends javax.swing.JDialog {

    public java.sql.Connection con;
    public java.sql.Statement stmtListar;
    public java.sql.ResultSet rsListar;
    private Date diaAtual = new Date();
    JDPesquisaGlobalFornecedor pesquisa = new JDPesquisaGlobalFornecedor(null, rootPaneCheckingEnabled);
    NumberFormat format;
    Toolkit toolkit = Toolkit.getDefaultToolkit();
    Dimension screenSize = toolkit.getScreenSize();
    private double total_double;

    /**
     * Creates new form JDLancFinanceiro
     */
    public JDLancPagarBaixa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        lookandfell();
        jTextFieldID_Fornecedor.setDocument(new Limite_digitosNumeros(5));
        jDateChooserData_Vencimento.setDate(diaAtual);
        jSpinnerQtdParcelas.setEnabled(false);

        this.setBounds(0, 0, screenSize.width, screenSize.height);
        this.setLocationRelativeTo(null);
        jRadioButtonAberto.setSelected(true);

        ((JSpinner.DefaultEditor) jSpinnerValor.getEditor()).getTextField().addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent evt) {
                super.focusLost(evt);
                calcularValorTotal();

            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxTipoSaida = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxTipoPagamento = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxCaixaBanco = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaHistorico = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxParcela = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerQtdParcelas = new javax.swing.JSpinner();
        jSpinnerValor = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldID_Fornecedor = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextFieldInfo_Fornecedor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jDateChooserData_Vencimento = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextFieldValorTotal = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonLimpar1 = new javax.swing.JButton();
        dataRender1 = new util.DataRender();
        precoRender1 = new util.PrecoRender();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableFaturas = new javax.swing.JTable();
        jRadioButtonAberto = new javax.swing.JRadioButton();
        jRadioButtonQuitado = new javax.swing.JRadioButton();
        jRadioButtonTodos = new javax.swing.JRadioButton();
        jButtonBaixar = new javax.swing.JButton();
        jButtonSair1 = new javax.swing.JButton();
        jButtonBaixar1 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Movi Mente - Contas a Pagar");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lançamento de Contas a Pagar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jComboBoxTipoSaida.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxTipoSaida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Pagamento Mensalidade - Aluno", "Pagamento Mensalidade - Empresa", "Implantação de Saldo", "Diversos" }));
        jComboBoxTipoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoSaidaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Tipo Pagamento");

        jComboBoxTipoPagamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxTipoPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "DI - Dinheiro", "CD - Cartão Débito", "CC - Cartão Crédito - à vista", "CP - Cartão Crédito - Parcelado", "TR - Transferência ou Doc", "CH - Cheque" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Tipo Saida");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Caixa / Bancos");

        jComboBoxCaixaBanco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxCaixaBanco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "MoviMente", "Banco do Brasil" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Valor Total");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Historico");

        jTextAreaHistorico.setColumns(20);
        jTextAreaHistorico.setLineWrap(true);
        jTextAreaHistorico.setRows(5);
        jTextAreaHistorico.setTabSize(1);
        jScrollPane1.setViewportView(jTextAreaHistorico);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Gerar Parcelas?");

        jComboBoxParcela.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxParcela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jComboBoxParcela.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxParcelaItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Parcelas");

        jSpinnerQtdParcelas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jSpinnerQtdParcelas.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        jSpinnerQtdParcelas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSpinnerQtdParcelasFocusLost(evt);
            }
        });

        jSpinnerValor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jSpinnerValor.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        jSpinnerValor.setNextFocusableComponent(jSpinnerQtdParcelas);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("ID Fornecedor");

        jTextFieldID_Fornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldID_FornecedorFocusLost(evt);
            }
        });

        jButton1.setText("P");
        jButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton1FocusLost(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldInfo_Fornecedor.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Data Vencimento");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Valor Parcela");

        jFormattedTextFieldValorTotal.setEditable(false);
        jFormattedTextFieldValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonLimpar.setText("Limpar");

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonLimpar1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonLimpar1.setText("Novo Registro");
        jButtonLimpar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jComboBoxTipoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserData_Vencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(jComboBoxCaixaBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jSpinnerQtdParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLimpar1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jComboBoxTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSpinnerValor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70)
                                        .addComponent(dataRender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(196, 196, 196)
                                        .addComponent(precoRender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldID_Fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldInfo_Fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jDateChooserData_Vencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldID_Fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jTextFieldInfo_Fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jComboBoxTipoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBoxParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel5)
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dataRender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCaixaBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerQtdParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precoRender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonLimpar1))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pendentes"));

        jTableFaturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Parcela", "Fornecedor", "Tipo", "Tipo Pagamento", "Emissão", "Vencimento", "Historico", "Valor", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFaturas.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableFaturas);
        if (jTableFaturas.getColumnModel().getColumnCount() > 0) {
            jTableFaturas.getColumnModel().getColumn(0).setMinWidth(65);
            jTableFaturas.getColumnModel().getColumn(0).setPreferredWidth(65);
            jTableFaturas.getColumnModel().getColumn(0).setMaxWidth(65);
            jTableFaturas.getColumnModel().getColumn(1).setMinWidth(65);
            jTableFaturas.getColumnModel().getColumn(1).setPreferredWidth(65);
            jTableFaturas.getColumnModel().getColumn(1).setMaxWidth(65);
            jTableFaturas.getColumnModel().getColumn(5).setMinWidth(80);
            jTableFaturas.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTableFaturas.getColumnModel().getColumn(5).setMaxWidth(80);
            jTableFaturas.getColumnModel().getColumn(5).setCellRenderer(dataRender1);
            jTableFaturas.getColumnModel().getColumn(6).setMinWidth(80);
            jTableFaturas.getColumnModel().getColumn(6).setPreferredWidth(80);
            jTableFaturas.getColumnModel().getColumn(6).setMaxWidth(80);
            jTableFaturas.getColumnModel().getColumn(6).setCellRenderer(dataRender1);
            jTableFaturas.getColumnModel().getColumn(8).setMinWidth(100);
            jTableFaturas.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTableFaturas.getColumnModel().getColumn(8).setMaxWidth(100);
            jTableFaturas.getColumnModel().getColumn(8).setCellRenderer(precoRender1);
            jTableFaturas.getColumnModel().getColumn(9).setMinWidth(100);
            jTableFaturas.getColumnModel().getColumn(9).setPreferredWidth(100);
            jTableFaturas.getColumnModel().getColumn(9).setMaxWidth(100);
        }

        buttonGroup1.add(jRadioButtonAberto);
        jRadioButtonAberto.setText("Em Aberto");
        jRadioButtonAberto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAbertoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonQuitado);
        jRadioButtonQuitado.setText("Quitado");
        jRadioButtonQuitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonQuitadoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonTodos);
        jRadioButtonTodos.setText("Todos");
        jRadioButtonTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTodosActionPerformed(evt);
            }
        });

        jButtonBaixar.setText("Baixar");
        jButtonBaixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaixarActionPerformed(evt);
            }
        });

        jButtonSair1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonSair1.setText("Sair");
        jButtonSair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSair1ActionPerformed(evt);
            }
        });

        jButtonBaixar1.setText("Excluir Lançamento");
        jButtonBaixar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaixar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(832, 832, 832)
                        .addComponent(jRadioButtonAberto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonQuitado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBaixar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(732, 732, 732)
                        .addComponent(jButtonBaixar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(242, 242, 242)
                        .addComponent(jButtonSair1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonAberto)
                    .addComponent(jRadioButtonQuitado)
                    .addComponent(jRadioButtonTodos)
                    .addComponent(jButtonBaixar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSair1)
                    .addComponent(jButtonBaixar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        if (jFormattedTextFieldValorTotal.getText().equals("R$ 0,00")) {
            jTextAreaHistorico.requestFocus();
        } else {
            salvar();
            buttonBuscar();
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    private void jComboBoxTipoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoSaidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipoSaidaActionPerformed

    private void jSpinnerQtdParcelasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSpinnerQtdParcelasFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jSpinnerQtdParcelasFocusLost

    private void jComboBoxParcelaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxParcelaItemStateChanged
        // TODO add your handling code here:
        if (jComboBoxParcela.getSelectedItem().toString().equals("Sim")) {

            jSpinnerQtdParcelas.setEnabled(true);
        } else {
            jSpinnerQtdParcelas.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxParcelaItemStateChanged

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JDPesquisaGlobalFornecedor dLancPagar = new JDPesquisaGlobalFornecedor(null, rootPaneCheckingEnabled);
        dLancPagar.setLocationRelativeTo(null);
        dLancPagar.setVisible(true);
        jTextFieldID_Fornecedor.setText(String.valueOf(JDPesquisaGlobalFornecedor.id_fornecedor));
        buscarSomenteID_Fornecedor();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton1FocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton1FocusLost

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        if (jSpinnerValor.getValue().toString().equals("0")) {

        } else {
            calcularValorTotal();
        }

    }//GEN-LAST:event_jPanel1MouseMoved

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JDCadEmpresa empresa = new JDCadEmpresa(null, rootPaneCheckingEnabled);
        empresa.setLocationRelativeTo(null);
        empresa.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldID_FornecedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldID_FornecedorFocusLost
        // TODO add your handling code here:
        if (jTextFieldID_Fornecedor.getText().isEmpty()) {

        } else {
            buscarSomenteID_FornecedorID();
            buttonBuscar();
        }

    }//GEN-LAST:event_jTextFieldID_FornecedorFocusLost

    private void jRadioButtonAbertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAbertoActionPerformed
        // TODO add your handling code here:
        //        jButtonBaixar.setEnabled(true);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(100);
        if (jTextFieldID_Fornecedor.getText().equals("0")) {
            buscarID_FornecedorAbertoTodos();
        } else {
            buscarID_FornecedorAberto();
        }
        jButtonBaixar.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonAbertoActionPerformed

    private void jRadioButtonQuitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonQuitadoActionPerformed
        // TODO add your handling code here:
        //        jButtonBaixar.setEnabled(false);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(100);
        if (jTextFieldID_Fornecedor.getText().equals("0")) {
            buscarID_FornecedorQuitadoTodos();
        } else {
            buscarID_FornecedorQuitado();
        }
        jButtonBaixar.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonQuitadoActionPerformed

    private void jRadioButtonTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTodosActionPerformed
        // TODO add your handling code here:
        //        jButtonBaixar.setEnabled(false);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(100);
        if (jTextFieldID_Fornecedor.getText().equals("0")) {
            buscarID_FornecedorTodosTodos();
        } else {
            buscarID_FornecedorTodos();
        }
        jButtonBaixar.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonTodosActionPerformed

    private void jButtonBaixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaixarActionPerformed
        // TODO add your handling code here:
        int linha = jTableFaturas.getSelectedRow();
        if (jTableFaturas.getValueAt(linha, 0) == null) {

        } else {

            int option = JOptionPane.showConfirmDialog(rootPane, "Confirma ?");

            if (option == JOptionPane.YES_OPTION) {
                EfetuarBaixa();
            } else {

            }
        }
    }//GEN-LAST:event_jButtonBaixarActionPerformed

    private void jButtonSair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSair1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSair1ActionPerformed

    private void jButtonBaixar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaixar1ActionPerformed
        // TODO add your handling code here:
        int linha = jTableFaturas.getSelectedRow();
        if (jTableFaturas.getValueAt(linha, 0) == null) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha preenchida !!");
        } else {

            try {

                ContasPagarBean pagar = new ContasPagarBean();

                ContasPagarDAO dao = new ContasPagarDAO();

                String idstr = jTableFaturas.getValueAt(linha, 0).toString();
                int id = Integer.parseInt(idstr);
                pagar.setId_contas_pagar(id);
                Integer opcao = JOptionPane.showConfirmDialog(null, "Confirma a Exclusão do Titutlo?", "Excluir Titulo", JOptionPane.OK_CANCEL_OPTION);
                if (opcao == JOptionPane.YES_OPTION) {
                    dao.excluirLancamento(pagar);
                    ((DefaultTableModel) jTableFaturas.getModel()).removeRow(jTableFaturas.getSelectedRow());

                } else {

                }
            } catch (ClassNotFoundException | NumberFormatException | SQLException e) {

            }
        }
    }//GEN-LAST:event_jButtonBaixar1ActionPerformed

    private void jButtonLimpar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpar1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        JDLancPagarBaixa baixa = new JDLancPagarBaixa(null, rootPaneCheckingEnabled);
        baixa.setLocationRelativeTo(null);
        baixa.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jButtonLimpar1ActionPerformed

    private void calcularValorTotal() {

        try {
            format = NumberFormat.getCurrencyInstance();
            format.setMinimumFractionDigits(2);
            double valororiginal = Double.parseDouble(jSpinnerValor.getValue().toString());
            System.out.println(valororiginal);
            int qtdparcelas = Integer.parseInt(jSpinnerQtdParcelas.getValue().toString());
            System.out.println(qtdparcelas);
            double resultadototal = valororiginal / qtdparcelas;
            total_double = valororiginal / qtdparcelas;

            jFormattedTextFieldValorTotal.setText(String.valueOf(format.format(resultadototal)));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao Obter Valor Total!");
        }
    }

    private boolean validarCampos() {

        if (jTextAreaHistorico.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "O historico não pode ser vazio !!");
            jTextAreaHistorico.requestFocus();
        } else if (jTextFieldID_Fornecedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Informe o Codigo do Fornecedor !!");
            jTextFieldID_Fornecedor.requestFocus();
        } else if (jTextFieldID_Fornecedor.getText().equals("0")) {
            JOptionPane.showMessageDialog(rootPane, "Fornecedor Inválido !!");
            jTextFieldID_Fornecedor.requestFocus();
        } else if (jComboBoxCaixaBanco.getSelectedItem().toString().equals("Selecione")) {
            JOptionPane.showMessageDialog(rootPane, "O banco deve ser Selecionado !!");
            jComboBoxCaixaBanco.requestFocus();
        } else if (jComboBoxTipoPagamento.getSelectedItem().toString().equals("Selecione")) {
            JOptionPane.showMessageDialog(rootPane, "O tipo de pagamento deve ser Selecionado !!");
            jComboBoxTipoPagamento.requestFocus();
        } else if (jComboBoxTipoSaida.getSelectedItem().toString().equals("Selecione")) {
            JOptionPane.showMessageDialog(rootPane, "O tipo de Saida deve ser selecionado !!");
            jComboBoxTipoSaida.requestFocus();
        } else if (jSpinnerValor.getValue().toString().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Valor não pode ser Vazio ou igual a 0 !!");
            jSpinnerValor.requestFocus();
        } else if (((Number) jSpinnerValor.getValue()).intValue() <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Valor não pode ser Vazio ou igual a 0 !!");
            jSpinnerValor.requestFocus();
        } else if (jDateChooserData_Vencimento.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Data não pode ser vazia !!");
            jDateChooserData_Vencimento.requestFocus();
        } else {

            return false;
        }

        return true;
    }

    private void salvar() {

        GregorianCalendar gc = new GregorianCalendar();
        ContasPagarBean conta = new ContasPagarBean();
        ContasPagarDAO dao = new ContasPagarDAO();
        Date data_criacao = new Date();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(data_criacao.getTime());
        int option = JOptionPane.showConfirmDialog(rootPane, "Confirma ?");

        if (option == JOptionPane.YES_OPTION) {

            if (validarCampos() == false) {

                try {

                    conta.setTipo_saida(jComboBoxTipoSaida.getSelectedItem().toString());
                    conta.setTipo_pagamento(jComboBoxTipoPagamento.getSelectedItem().toString());
                    conta.setCaixa(jComboBoxCaixaBanco.getSelectedItem().toString());
                    conta.setHora_lancamento(timestamp);
                    conta.setData_lancamento(data_criacao);
                    conta.setHistorico(jTextAreaHistorico.getText());
                    conta.setId_fornecedor(Integer.parseInt(jTextFieldID_Fornecedor.getText()));
                    conta.setQtd_parcelas(Integer.parseInt(jSpinnerQtdParcelas.getValue().toString()));
//                    conta.setValor(Double.parseDouble(jSpinnerValor.getValue().toString()));
                    conta.setValor(-total_double);
                    conta.setNome_usuario(JFLogin.nomeuser);
                    int numPar = Integer.parseInt(jSpinnerQtdParcelas.getValue().toString());
                    System.out.println("src.JDLancPagar.salvar()");

                    for (int e = 1; e <= numPar; e++) {
                        gc.setTime(jDateChooserData_Vencimento.getDate());
                        gc.add(GregorianCalendar.MONTH, e - 1);
                        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        Date d = gc.getTime();
                        df.format(d);
                        conta.setNumero_parcela(e);
                        conta.setData_vencimento(d);
                        System.out.println(d);
                        dao.inserir(conta);
                    }
                    JOptionPane.showMessageDialog(rootPane, "Lançamento Feito com Sucesso !!");
//                    this.dispose();
//                    JDLancPagarBaixa lancPagar = new JDLancPagarBaixa(null, rootPaneCheckingEnabled);
//                    lancPagar.setLocationRelativeTo(null);
//                    lancPagar.setVisible(true);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(rootPane, "Erro!");
                }
            } else {

            }
        }
    }

    private void buscarSomenteID_Fornecedor() {
        try {

            jTextFieldInfo_Fornecedor.setText("");
            int id_fornecedor = JDPesquisaGlobalFornecedor.id_fornecedor;
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_empresa WHERE id_empresa='" + id_fornecedor + "'");

            if (rsListar.next()) {

                jTextFieldInfo_Fornecedor.setText(rsListar.getString(2));
            }
        } catch (SQLException ex) {

        }
    }

    private void buscarSomenteID_FornecedorID() {
        try {

            jTextFieldInfo_Fornecedor.setText("");
            if (jTextFieldID_Fornecedor.getText().isEmpty()) {

            } else {

                iniciarBD();

                rsListar = stmtListar.executeQuery("SELECT * FROM cad_empresa WHERE id_empresa='" + Integer.parseInt(jTextFieldID_Fornecedor.getText()) + "'");

                if (rsListar.next()) {

                    jTextFieldInfo_Fornecedor.setText(rsListar.getString(2));
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Nenhum Fornecedor cadastrado para este Código !!");
                    jTextFieldID_Fornecedor.requestFocus();
                }
            }
        } catch (SQLException ex) {

        }
    }

    private void iniciarBD() {
        try {
            con = ConexaoFactory.getConnection();
            stmtListar = con.createStatement();

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
    }

    private void lookandfell() {
        try {

            UIManager.setLookAndFeel(new SyntheticaPlainLookAndFeel());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ParseException | UnsupportedLookAndFeelException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar o tema = " + erro);
        }
    }

    private void buttonBuscar() {

        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableFaturas.getModel()).setNumRows(100);
        if (jRadioButtonAberto.isSelected()) {
            buscarID_FornecedorAberto();
        } else if (jRadioButtonQuitado.isSelected()) {
            buscarID_FornecedorQuitado();
        } else if (jRadioButtonTodos.isSelected()) {
            buscarID_FornecedorTodos();
        }

    }

    private void EfetuarBaixa() {
        int linha = jTableFaturas.getSelectedRow();
        ContasPagarBean conta = new ContasPagarBean();
        ContasPagarDAO dao = new ContasPagarDAO();
        CaixaBean caixa = new CaixaBean();
        CaixaDAO daoc = new CaixaDAO();
        Date data_criacao = new Date();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(data_criacao.getTime());
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

        try {
            String idstr = jTableFaturas.getValueAt(linha, 0).toString();
            String tipo_movimento = "S";
            String tipo_pagamento = String.valueOf(jTableFaturas.getValueAt(linha, 4));
//            Object data_lancamento = jTableFaturas.getValueAt(linha, 4);
            String historico = jTableFaturas.getValueAt(linha, 7).toString();

            String valorstr = jTableFaturas.getValueAt(linha, 8).toString();
            Double valor = Double.parseDouble(valorstr);

            caixa.setTipo_movimento(tipo_movimento);
            caixa.setTipo_pagamento(tipo_pagamento);
            caixa.setData_lancamento(data_criacao);
            caixa.setHora_lancamento(timestamp);
            caixa.setHistorico(historico);
            caixa.setValor(valor);
            caixa.setId_titulo(Integer.parseInt(idstr));
            caixa.setCaixa("Movi Mente");
            caixa.setId_banco(1);
            caixa.setId_tipo(2);
            caixa.setId_fornecedor(Integer.parseInt(jTextFieldID_Fornecedor.getText()));
            caixa.setId_aluno(1);

            conta.setId_contas_pagar(Integer.parseInt(idstr));
            conta.setData_baixa(data_criacao);
            conta.setHora_baixa(timestamp);
            dao.efetuarBaixa(conta);
            daoc.inserir(caixa);
//            gerarreciboJD();
            ((DefaultTableModel) jTableFaturas.getModel()).removeRow(jTableFaturas.getSelectedRow());

//            jFormattedTextFieldCPFBusca.setText("");
//            jFormattedTextFieldCPFBusca.requestFocus();
        } catch (NumberFormatException | SQLException e) {

        }
    }

    private void nome() {
        try {

            jTextFieldInfo_Fornecedor.setText("");

            if (jTextFieldID_Fornecedor.getText().isEmpty()) {

            } else {

                iniciarBD();
                rsListar = stmtListar.executeQuery("SELECT * from cad_empresa WHERE id_empresa='" + Integer.parseInt(jTextFieldID_Fornecedor.getText()) + "'");

                if (rsListar.first()) {

                    jTextFieldInfo_Fornecedor.setText(rsListar.getString("nome_fantasia"));
                }
            }
        } catch (SQLException ex) {

        }

    }

    private void buscarID_FornecedorTodos() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT\n"
                    + "     contas_pagar.`id_contas_pagar` AS contas_pagar_id_contas_pagar,\n"
                    + "     contas_pagar.`qtd_parcelas` AS contas_pagar_qtd_parcelas,\n"
                    + "     contas_pagar.`status` AS contas_pagar_status,\n"
                    + "     contas_pagar.`numero_parcela` AS contas_pagar_numero_parcela,\n"
                    + "     contas_pagar.`historico` AS contas_pagar_historico,\n"
                    + "     contas_pagar.`tipo_saida` AS contas_pagar_tipo_saida,\n"
                    + "     contas_pagar.`tipo_pagamento` AS contas_pagar_tipo_pagamento,\n"
                    + "     contas_pagar.`caixa` AS contas_pagar_caixa,\n"
                    + "     contas_pagar.`data_lancamento` AS contas_pagar_data_lancamento,\n"
                    + "     contas_pagar.`hora_lancamento` AS contas_pagar_hora_lancamento,\n"
                    + "     contas_pagar.`data_vencimento` AS contas_pagar_data_vencimento,\n"
                    + "     contas_pagar.`data_baixa` AS contas_pagar_data_baixa,\n"
                    + "     contas_pagar.`hora_baixa` AS contas_pagar_hora_baixa,\n"
                    + "     contas_pagar.`id_fornecedor` AS contas_pagar_id_fornecedor,\n"
                    + "     contas_pagar.`valor` AS contas_pagar_valor,\n"
                    + "     cad_empresa.`id_empresa` AS cad_empresa_id_empresa,\n"
                    + "     cad_empresa.`nome_fantasia` AS cad_empresa_nome_fantasia\n"
                    + "FROM\n"
                    + "     `contas_pagar` contas_pagar INNER JOIN `cad_empresa` cad_empresa ON contas_pagar.`id_fornecedor` = cad_empresa.`id_empresa` WHERE id_fornecedor='" + Integer.parseInt(jTextFieldID_Fornecedor.getText()) + "'");
            montarTabela();

        } catch (SQLException ex) {

        }
    }

    private void buscarID_FornecedorQuitado() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT\n"
                    + "     contas_pagar.`id_contas_pagar` AS contas_pagar_id_contas_pagar,\n"
                    + "     contas_pagar.`qtd_parcelas` AS contas_pagar_qtd_parcelas,\n"
                    + "     contas_pagar.`status` AS contas_pagar_status,\n"
                    + "     contas_pagar.`numero_parcela` AS contas_pagar_numero_parcela,\n"
                    + "     contas_pagar.`historico` AS contas_pagar_historico,\n"
                    + "     contas_pagar.`tipo_saida` AS contas_pagar_tipo_saida,\n"
                    + "     contas_pagar.`tipo_pagamento` AS contas_pagar_tipo_pagamento,\n"
                    + "     contas_pagar.`caixa` AS contas_pagar_caixa,\n"
                    + "     contas_pagar.`data_lancamento` AS contas_pagar_data_lancamento,\n"
                    + "     contas_pagar.`hora_lancamento` AS contas_pagar_hora_lancamento,\n"
                    + "     contas_pagar.`data_vencimento` AS contas_pagar_data_vencimento,\n"
                    + "     contas_pagar.`data_baixa` AS contas_pagar_data_baixa,\n"
                    + "     contas_pagar.`hora_baixa` AS contas_pagar_hora_baixa,\n"
                    + "     contas_pagar.`id_fornecedor` AS contas_pagar_id_fornecedor,\n"
                    + "     contas_pagar.`valor` AS contas_pagar_valor,\n"
                    + "     cad_empresa.`id_empresa` AS cad_empresa_id_empresa,\n"
                    + "     cad_empresa.`nome_fantasia` AS cad_empresa_nome_fantasia\n"
                    + "FROM\n"
                    + "     `contas_pagar` contas_pagar INNER JOIN `cad_empresa` cad_empresa ON contas_pagar.`id_fornecedor` = cad_empresa.`id_empresa` WHERE id_fornecedor='" + jTextFieldID_Fornecedor.getText() + "' and data_baixa IS NOT NULL");
            montarTabela();

        } catch (SQLException ex) {

        }
    }

    private void buscarID_FornecedorAberto() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT\n"
                    + "     contas_pagar.`id_contas_pagar` AS contas_pagar_id_contas_pagar,\n"
                    + "     contas_pagar.`qtd_parcelas` AS contas_pagar_qtd_parcelas,\n"
                    + "     contas_pagar.`status` AS contas_pagar_status,\n"
                    + "     contas_pagar.`numero_parcela` AS contas_pagar_numero_parcela,\n"
                    + "     contas_pagar.`historico` AS contas_pagar_historico,\n"
                    + "     contas_pagar.`tipo_saida` AS contas_pagar_tipo_saida,\n"
                    + "     contas_pagar.`tipo_pagamento` AS contas_pagar_tipo_pagamento,\n"
                    + "     contas_pagar.`caixa` AS contas_pagar_caixa,\n"
                    + "     contas_pagar.`data_lancamento` AS contas_pagar_data_lancamento,\n"
                    + "     contas_pagar.`hora_lancamento` AS contas_pagar_hora_lancamento,\n"
                    + "     contas_pagar.`data_vencimento` AS contas_pagar_data_vencimento,\n"
                    + "     contas_pagar.`data_baixa` AS contas_pagar_data_baixa,\n"
                    + "     contas_pagar.`hora_baixa` AS contas_pagar_hora_baixa,\n"
                    + "     contas_pagar.`id_fornecedor` AS contas_pagar_id_fornecedor,\n"
                    + "     contas_pagar.`valor` AS contas_pagar_valor,\n"
                    + "     cad_empresa.`id_empresa` AS cad_empresa_id_empresa,\n"
                    + "     cad_empresa.`nome_fantasia` AS cad_empresa_nome_fantasia\n"
                    + "FROM\n"
                    + "     `contas_pagar` contas_pagar INNER JOIN `cad_empresa` cad_empresa ON contas_pagar.`id_fornecedor` = cad_empresa.`id_empresa` WHERE id_fornecedor='" + Integer.parseInt(jTextFieldID_Fornecedor.getText()) + "' and data_baixa IS NULL");
            montarTabela();

        } catch (SQLException ex) {

        }
    }

    private void buscarID_FornecedorAbertoTodos() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT\n"
                    + "     contas_pagar.`id_contas_pagar` AS contas_pagar_id_contas_pagar,\n"
                    + "     contas_pagar.`qtd_parcelas` AS contas_pagar_qtd_parcelas,\n"
                    + "     contas_pagar.`status` AS contas_pagar_status,\n"
                    + "     contas_pagar.`numero_parcela` AS contas_pagar_numero_parcela,\n"
                    + "     contas_pagar.`historico` AS contas_pagar_historico,\n"
                    + "     contas_pagar.`tipo_saida` AS contas_pagar_tipo_saida,\n"
                    + "     contas_pagar.`tipo_pagamento` AS contas_pagar_tipo_pagamento,\n"
                    + "     contas_pagar.`caixa` AS contas_pagar_caixa,\n"
                    + "     contas_pagar.`data_lancamento` AS contas_pagar_data_lancamento,\n"
                    + "     contas_pagar.`hora_lancamento` AS contas_pagar_hora_lancamento,\n"
                    + "     contas_pagar.`data_vencimento` AS contas_pagar_data_vencimento,\n"
                    + "     contas_pagar.`data_baixa` AS contas_pagar_data_baixa,\n"
                    + "     contas_pagar.`hora_baixa` AS contas_pagar_hora_baixa,\n"
                    + "     contas_pagar.`id_fornecedor` AS contas_pagar_id_fornecedor,\n"
                    + "     contas_pagar.`valor` AS contas_pagar_valor,\n"
                    + "     cad_empresa.`id_empresa` AS cad_empresa_id_empresa,\n"
                    + "     cad_empresa.`nome_fantasia` AS cad_empresa_nome_fantasia\n"
                    + "FROM\n"
                    + "     `contas_pagar` contas_pagar INNER JOIN `cad_empresa` cad_empresa ON contas_pagar.`id_fornecedor` = cad_empresa.`id_empresa` WHERE data_baixa IS NULL");
            montarTabela();

        } catch (SQLException ex) {

        }
    }

    private void buscarID_FornecedorQuitadoTodos() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT\n"
                    + "     contas_pagar.`id_contas_pagar` AS contas_pagar_id_contas_pagar,\n"
                    + "     contas_pagar.`qtd_parcelas` AS contas_pagar_qtd_parcelas,\n"
                    + "     contas_pagar.`status` AS contas_pagar_status,\n"
                    + "     contas_pagar.`numero_parcela` AS contas_pagar_numero_parcela,\n"
                    + "     contas_pagar.`historico` AS contas_pagar_historico,\n"
                    + "     contas_pagar.`tipo_saida` AS contas_pagar_tipo_saida,\n"
                    + "     contas_pagar.`tipo_pagamento` AS contas_pagar_tipo_pagamento,\n"
                    + "     contas_pagar.`caixa` AS contas_pagar_caixa,\n"
                    + "     contas_pagar.`data_lancamento` AS contas_pagar_data_lancamento,\n"
                    + "     contas_pagar.`hora_lancamento` AS contas_pagar_hora_lancamento,\n"
                    + "     contas_pagar.`data_vencimento` AS contas_pagar_data_vencimento,\n"
                    + "     contas_pagar.`data_baixa` AS contas_pagar_data_baixa,\n"
                    + "     contas_pagar.`hora_baixa` AS contas_pagar_hora_baixa,\n"
                    + "     contas_pagar.`id_fornecedor` AS contas_pagar_id_fornecedor,\n"
                    + "     contas_pagar.`valor` AS contas_pagar_valor,\n"
                    + "     cad_empresa.`id_empresa` AS cad_empresa_id_empresa,\n"
                    + "     cad_empresa.`nome_fantasia` AS cad_empresa_nome_fantasia\n"
                    + "FROM\n"
                    + "     `contas_pagar` contas_pagar INNER JOIN `cad_empresa` cad_empresa ON contas_pagar.`id_fornecedor` = cad_empresa.`id_empresa` WHERE data_baixa IS NOT NULL");
            montarTabela();

        } catch (SQLException ex) {

        }
    }

    private void buscarID_FornecedorTodosTodos() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT\n"
                    + "     contas_pagar.`id_contas_pagar` AS contas_pagar_id_contas_pagar,\n"
                    + "     contas_pagar.`qtd_parcelas` AS contas_pagar_qtd_parcelas,\n"
                    + "     contas_pagar.`status` AS contas_pagar_status,\n"
                    + "     contas_pagar.`numero_parcela` AS contas_pagar_numero_parcela,\n"
                    + "     contas_pagar.`historico` AS contas_pagar_historico,\n"
                    + "     contas_pagar.`tipo_saida` AS contas_pagar_tipo_saida,\n"
                    + "     contas_pagar.`tipo_pagamento` AS contas_pagar_tipo_pagamento,\n"
                    + "     contas_pagar.`caixa` AS contas_pagar_caixa,\n"
                    + "     contas_pagar.`data_lancamento` AS contas_pagar_data_lancamento,\n"
                    + "     contas_pagar.`hora_lancamento` AS contas_pagar_hora_lancamento,\n"
                    + "     contas_pagar.`data_vencimento` AS contas_pagar_data_vencimento,\n"
                    + "     contas_pagar.`data_baixa` AS contas_pagar_data_baixa,\n"
                    + "     contas_pagar.`hora_baixa` AS contas_pagar_hora_baixa,\n"
                    + "     contas_pagar.`id_fornecedor` AS contas_pagar_id_fornecedor,\n"
                    + "     contas_pagar.`valor` AS contas_pagar_valor,\n"
                    + "     cad_empresa.`id_empresa` AS cad_empresa_id_empresa,\n"
                    + "     cad_empresa.`nome_fantasia` AS cad_empresa_nome_fantasia\n"
                    + "FROM\n"
                    + "     `contas_pagar` contas_pagar INNER JOIN `cad_empresa` cad_empresa ON contas_pagar.`id_fornecedor` = cad_empresa.`id_empresa`");
            montarTabela();
        } catch (SQLException ex) {

        }
    }

    private void montarTabela() {
        int linha = 0;
        try {
            while (rsListar.next()) {
                String id_cp = rsListar.getString("contas_pagar_id_contas_pagar");
                String parcela = rsListar.getString("contas_pagar_numero_parcela");
                String fornecedor = rsListar.getString("cad_empresa_nome_fantasia");
                String tipo_saida = rsListar.getString("contas_pagar_tipo_saida");
                String tipo_pagamento = rsListar.getString("contas_pagar_tipo_pagamento");
                Object data_lancamento = rsListar.getObject("contas_pagar_data_lancamento");
                Object data_vencimento = rsListar.getObject("contas_pagar_data_vencimento");
                String historico = rsListar.getString("contas_pagar_historico");
                Double valor = rsListar.getDouble("contas_pagar_valor");
                String status = rsListar.getString("contas_pagar_status");
                jTableFaturas.getModel().setValueAt(id_cp, linha, 0);
                jTableFaturas.getModel().setValueAt(parcela, linha, 1);
                jTableFaturas.getModel().setValueAt(fornecedor, linha, 2);
                jTableFaturas.getModel().setValueAt(tipo_saida, linha, 3);
                jTableFaturas.getModel().setValueAt(tipo_pagamento, linha, 4);
                jTableFaturas.getModel().setValueAt(data_lancamento, linha, 5);
                jTableFaturas.getModel().setValueAt(data_vencimento, linha, 6);
                jTableFaturas.getModel().setValueAt(historico, linha, 7);
                jTableFaturas.getModel().setValueAt(valor, linha, 8);
                jTableFaturas.getModel().setValueAt(status, linha, 9);

                if (status.equals("1")) {
                    jTableFaturas.getModel().setValueAt("Em Aberto", linha, 9);
                } else {
                    jTableFaturas.getModel().setValueAt("Baixado", linha, 9);
                }
                linha++;

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDLancPagarBaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDLancPagarBaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDLancPagarBaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDLancPagarBaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDLancPagarBaixa dialog = new JDLancPagarBaixa(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private util.DataRender dataRender1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonBaixar;
    private javax.swing.JButton jButtonBaixar1;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonLimpar1;
    private javax.swing.JButton jButtonSair1;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxCaixaBanco;
    private javax.swing.JComboBox<String> jComboBoxParcela;
    private javax.swing.JComboBox<String> jComboBoxTipoPagamento;
    private javax.swing.JComboBox<String> jComboBoxTipoSaida;
    private com.toedter.calendar.JDateChooser jDateChooserData_Vencimento;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonAberto;
    private javax.swing.JRadioButton jRadioButtonQuitado;
    private javax.swing.JRadioButton jRadioButtonTodos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerQtdParcelas;
    private javax.swing.JSpinner jSpinnerValor;
    private javax.swing.JTable jTableFaturas;
    private javax.swing.JTextArea jTextAreaHistorico;
    private javax.swing.JTextField jTextFieldID_Fornecedor;
    private javax.swing.JTextField jTextFieldInfo_Fornecedor;
    private util.PrecoRender precoRender1;
    // End of variables declaration//GEN-END:variables
}
