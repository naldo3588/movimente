/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import bean.AlunoBean;
import bean.ContratoBean;
import bean.ItemContratoBean;
import dao.AlunoDAO;
import dao.ContratoDAO;
import de.javasoft.plaf.synthetica.SyntheticaPlainLookAndFeel;
import factory.ConexaoFactory;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ronaldo Pedro
 */
public class JDAPM extends javax.swing.JDialog {

    ConexaoFactory conecta = new ConexaoFactory();
    public java.sql.Connection con;
    public java.sql.Statement stmtListar;
    public java.sql.ResultSet rsListar;
    private String dia;
    public static int id_contrato;
    public static int qtd_parcelas;
    public static int status;
    public static double valor_mensalidade;
    public static double valor_total_contrato;
    NumberFormat format;
    JFLogin login = new JFLogin();
    JDPesquisaGlobalAluno pesquisa = new JDPesquisaGlobalAluno(null, rootPaneCheckingEnabled);
    String nomeusuario = login.nomeuser;
    private int clickradio = 0;
    Toolkit toolkit = Toolkit.getDefaultToolkit();
    Dimension screenSize = toolkit.getScreenSize();

    /**
     * Creates new form JDAPM
     */
    public JDAPM(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();
        lookandfell();
//        this.setBounds(0, 0, screenSize.width, screenSize.height);
//        this.setLocationRelativeTo(null);
//        this.setBounds(0, 620, screenSize.width, 620);
        jTextFieldID_Plano.setVisible(false);
        jTextFieldID_Modalidade.setVisible(false);
        jTextFieldID_ItemModalidade.setVisible(false);
        jTextFieldID_ItemPlano.setVisible(false);
        jFormattedTextFieldValorTotalMensal2.setVisible(false);
        jFormattedTextFieldValorTotalContrato2.setVisible(false);
        jFormattedTextFieldValorTotalTabela1.setVisible(false);
        jFormattedTextFieldValorTotalMensalContrato1.setVisible(false);
        jButtonSalvar.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jSpinnerValorMod.setEnabled(false);

//        jFormattedTextFieldCPFAluno.requestFocus();
//        jPanel4.setVisible(false);
//        jLabel36.setVisible(false);
//        jTextFieldID_NovoContrato.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableModalidade = new javax.swing.JTable();
        jComboBoxNomeModalidade = new javax.swing.JComboBox<>();
        jTextFieldID_Modalidade = new javax.swing.JTextField();
        jTextFieldID_ItemModalidade = new javax.swing.JTextField();
        precoRender1 = new util.PrecoRender();
        jFormattedTextFieldValorTotalContrato1 = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNomeAlunoDadosAPM = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldPlanoAPM = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldModalidadeAPM = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jFormattedTextFieldValorTotalContrato = new javax.swing.JFormattedTextField();
        jLabel26 = new javax.swing.JLabel();
        jFormattedTextFieldValorTotalMensal = new javax.swing.JFormattedTextField();
        jFormattedTextFieldQtdParcelas = new javax.swing.JFormattedTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxDescManual = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jComboBoxFreqManual = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jComboBoxValorManual = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jFormattedTextFieldDescPlanoAPM = new javax.swing.JFormattedTextField();
        jLabel27 = new javax.swing.JLabel();
        jFormattedTextFieldFreqDadosAPM = new javax.swing.JFormattedTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSpinnerValorMod = new javax.swing.JSpinner();
        jFormattedTextFieldValorTotalMensal2 = new javax.swing.JFormattedTextField();
        jFormattedTextFieldValorTotalContrato2 = new javax.swing.JFormattedTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaDiasSemana = new javax.swing.JTextArea();
        jButtonLimparTextArea = new javax.swing.JButton();
        jFormattedTextFieldHorario = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jRadioButtonSegunda = new javax.swing.JRadioButton();
        jRadioButtonTerca = new javax.swing.JRadioButton();
        jRadioButtonQuarta = new javax.swing.JRadioButton();
        jRadioButtonSabado = new javax.swing.JRadioButton();
        jRadioButtonSexta = new javax.swing.JRadioButton();
        jRadioButtonQuinta = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextFieldCPFAluno = new javax.swing.JFormattedTextField();
        jButtonBusca = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePlano = new javax.swing.JTable();
        jComboBoxNomePlano = new javax.swing.JComboBox<>();
        jTextFieldID_Plano = new javax.swing.JTextField();
        jTextFieldID_ItemPlano = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldNomeAlunoDados = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldEmailAlunoDados = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jFormattedTextFieldTelefone = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldID_Aluno = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldEnderecoAlunoDados = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldBairroAlunoDados = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextFieldCPFDados = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldRG = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldCidadeAlunoDados = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextFieldID_Titular = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldID_NovoContrato = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableItensContrato = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jFormattedTextFieldValorTotalTabela = new javax.swing.JFormattedTextField();
        jLabel38 = new javax.swing.JLabel();
        jFormattedTextFieldValorTotalMensalContrato = new javax.swing.JFormattedTextField();
        jFormattedTextFieldValorTotalTabela1 = new javax.swing.JFormattedTextField();
        jFormattedTextFieldValorTotalMensalContrato1 = new javax.swing.JFormattedTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableDependentes = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jTextFieldID_Contrato = new javax.swing.JTextField();
        jButtonIncluir = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Movi Mente - Gerenciar Contratos");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Modalidades", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel1FocusGained(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("Nome");

        jTableModalidade.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableModalidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Frequencia", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableModalidade.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableModalidade.setShowHorizontalLines(false);
        jTableModalidade.setShowVerticalLines(false);
        jTableModalidade.getTableHeader().setReorderingAllowed(false);
        jTableModalidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableModalidadeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableModalidade);
        if (jTableModalidade.getColumnModel().getColumnCount() > 0) {
            jTableModalidade.getColumnModel().getColumn(0).setMinWidth(0);
            jTableModalidade.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTableModalidade.getColumnModel().getColumn(0).setMaxWidth(0);
            jTableModalidade.getColumnModel().getColumn(2).setCellRenderer(precoRender1);
        }

        jComboBoxNomeModalidade.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jComboBoxNomeModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        jComboBoxNomeModalidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNomeModalidadeItemStateChanged(evt);
            }
        });
        jComboBoxNomeModalidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxNomeModalidadeMouseClicked(evt);
            }
        });

        jTextFieldID_Modalidade.setEditable(false);
        jTextFieldID_Modalidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTextFieldID_ItemModalidade.setEditable(false);
        jTextFieldID_ItemModalidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jFormattedTextFieldValorTotalContrato1.setEditable(false);
        jFormattedTextFieldValorTotalContrato1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalContrato1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextFieldValorTotalContrato1.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalContrato1.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalContrato1.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalContrato1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextFieldID_ItemModalidade)
                        .addComponent(jTextFieldID_Modalidade)))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxNomeModalidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(precoRender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxNomeModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldID_Modalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldID_ItemModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(precoRender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do Contrato", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel11.setText("Aluno");

        jTextFieldNomeAlunoDadosAPM.setEditable(false);
        jTextFieldNomeAlunoDadosAPM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldNomeAlunoDadosAPM.setDisabledTextColor(java.awt.Color.black);
        jTextFieldNomeAlunoDadosAPM.setEnabled(false);
        jTextFieldNomeAlunoDadosAPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeAlunoDadosAPMActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setText("Plano");

        jTextFieldPlanoAPM.setEditable(false);
        jTextFieldPlanoAPM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldPlanoAPM.setDisabledTextColor(java.awt.Color.black);
        jTextFieldPlanoAPM.setEnabled(false);
        jTextFieldPlanoAPM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPlanoAPMFocusLost(evt);
            }
        });
        jTextFieldPlanoAPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPlanoAPMActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel14.setText("Modalidade");

        jTextFieldModalidadeAPM.setEditable(false);
        jTextFieldModalidadeAPM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldModalidadeAPM.setDisabledTextColor(java.awt.Color.black);
        jTextFieldModalidadeAPM.setEnabled(false);
        jTextFieldModalidadeAPM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldModalidadeAPMFocusLost(evt);
            }
        });
        jTextFieldModalidadeAPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModalidadeAPMActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton2.setText("Adicionar a Tabela");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Valores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        jPanel7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel7MouseMoved(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel32.setText("Valor Total");

        jFormattedTextFieldValorTotalContrato.setEditable(false);
        jFormattedTextFieldValorTotalContrato.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalContrato.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextFieldValorTotalContrato.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalContrato.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalContrato.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalContrato.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel26.setText("Valor Mensal");

        jFormattedTextFieldValorTotalMensal.setEditable(false);
        jFormattedTextFieldValorTotalMensal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalMensal.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalMensal.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalMensal.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalMensal.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jFormattedTextFieldQtdParcelas.setEditable(false);
        jFormattedTextFieldQtdParcelas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldQtdParcelas.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldQtdParcelas.setFocusCycleRoot(true);
        jFormattedTextFieldQtdParcelas.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldQtdParcelas.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setText("Parcelas");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("Valor Mod");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel18.setText("Desc Manual?");

        jComboBoxDescManual.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jComboBoxDescManual.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jComboBoxDescManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDescManualActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setText("Freq Manual?");

        jComboBoxFreqManual.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jComboBoxFreqManual.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jComboBoxFreqManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFreqManualActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel22.setText("Valor Manual?");

        jComboBoxValorManual.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jComboBoxValorManual.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jComboBoxValorManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxValorManualActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel17.setText("Desc Plano");

        jFormattedTextFieldDescPlanoAPM.setEditable(false);
        jFormattedTextFieldDescPlanoAPM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldDescPlanoAPM.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldDescPlanoAPM.setFocusCycleRoot(true);
        jFormattedTextFieldDescPlanoAPM.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldDescPlanoAPM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jFormattedTextFieldDescPlanoAPM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldDescPlanoAPMFocusLost(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel27.setText("%");

        jFormattedTextFieldFreqDadosAPM.setEditable(false);
        jFormattedTextFieldFreqDadosAPM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldFreqDadosAPM.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldFreqDadosAPM.setFocusCycleRoot(true);
        jFormattedTextFieldFreqDadosAPM.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldFreqDadosAPM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("x");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel19.setText("Frequência");

        jSpinnerValorMod.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));

        jFormattedTextFieldValorTotalMensal2.setEditable(false);
        jFormattedTextFieldValorTotalMensal2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalMensal2.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalMensal2.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalMensal2.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalMensal2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jFormattedTextFieldValorTotalContrato2.setEditable(false);
        jFormattedTextFieldValorTotalContrato2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalContrato2.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextFieldValorTotalContrato2.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalContrato2.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalContrato2.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalContrato2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerValorMod)
                            .addComponent(jComboBoxValorManual, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(16, 16, 16)))
                                .addGap(37, 37, 37)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFormattedTextFieldQtdParcelas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldValorTotalMensal2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldValorTotalContrato2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(11, 11, 11))
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxFreqManual, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jFormattedTextFieldFreqDadosAPM)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(19, 19, 19)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxDescManual, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(jFormattedTextFieldDescPlanoAPM, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(13, 13, 13))
                                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(20, 20, 20))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jFormattedTextFieldValorTotalMensal)
                                .addGap(8, 8, 8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFormattedTextFieldValorTotalContrato, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jLabel32))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextFieldValorTotalMensal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldValorTotalContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(7, 7, 7)
                                .addComponent(jComboBoxValorManual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel21))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(8, 8, 8)
                                .addComponent(jComboBoxDescManual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17)
                                .addGap(5, 5, 5)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFormattedTextFieldDescPlanoAPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel27)))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jFormattedTextFieldQtdParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextFieldValorTotalMensal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextFieldValorTotalContrato2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(8, 8, 8)
                        .addComponent(jComboBoxFreqManual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel19)
                        .addGap(5, 5, 5)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jFormattedTextFieldFreqDadosAPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinnerValorMod, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Horários", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jTextAreaDiasSemana.setEditable(false);
        jTextAreaDiasSemana.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jTextAreaDiasSemana.setColumns(20);
        jTextAreaDiasSemana.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextAreaDiasSemana.setLineWrap(true);
        jTextAreaDiasSemana.setRows(2);
        jTextAreaDiasSemana.setTabSize(5);
        jScrollPane3.setViewportView(jTextAreaDiasSemana);

        jButtonLimparTextArea.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonLimparTextArea.setText("C");
        jButtonLimparTextArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparTextAreaActionPerformed(evt);
            }
        });

        try {
            jFormattedTextFieldHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:## / ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldHorario.setFocusCycleRoot(true);
        jFormattedTextFieldHorario.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldHorario.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel24.setText("Hora");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel25.setText("Dias");

        jRadioButtonSegunda.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButtonSegunda.setText("Segunda");
        jRadioButtonSegunda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSegundaActionPerformed(evt);
            }
        });

        jRadioButtonTerca.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButtonTerca.setText("Terça");
        jRadioButtonTerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTercaActionPerformed(evt);
            }
        });

        jRadioButtonQuarta.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButtonQuarta.setText("Quarta");
        jRadioButtonQuarta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonQuartaActionPerformed(evt);
            }
        });

        jRadioButtonSabado.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButtonSabado.setText("Sábado");
        jRadioButtonSabado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSabadoActionPerformed(evt);
            }
        });

        jRadioButtonSexta.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButtonSexta.setText("Sexta");
        jRadioButtonSexta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSextaActionPerformed(evt);
            }
        });

        jRadioButtonQuinta.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButtonQuinta.setText("Quinta");
        jRadioButtonQuinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonQuintaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jRadioButtonSegunda)
                                    .addComponent(jRadioButtonTerca)
                                    .addComponent(jRadioButtonQuarta))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonQuinta)
                                    .addComponent(jRadioButtonSexta)
                                    .addComponent(jRadioButtonSabado)))
                            .addComponent(jFormattedTextFieldHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonLimparTextArea, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jButtonLimparTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(6, 6, 6)
                        .addComponent(jFormattedTextFieldHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(2, 2, 2)
                                .addComponent(jRadioButtonSegunda)
                                .addGap(0, 0, 0)
                                .addComponent(jRadioButtonTerca)
                                .addGap(0, 0, 0)
                                .addComponent(jRadioButtonQuarta))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jRadioButtonQuinta)
                                .addGap(0, 0, 0)
                                .addComponent(jRadioButtonSexta)
                                .addGap(0, 0, 0)
                                .addComponent(jRadioButtonSabado)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton1.setText("Visualizar Contrato");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton4.setText("Montar Contrato");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPlanoAPM, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jTextFieldNomeAlunoDadosAPM, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14)
                                    .addComponent(jTextFieldModalidadeAPM, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(71, 71, 71)
                        .addComponent(jButton2)
                        .addGap(25, 25, 25))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNomeAlunoDadosAPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(6, 6, 6)
                        .addComponent(jTextFieldModalidadeAPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(6, 6, 6)
                        .addComponent(jTextFieldPlanoAPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton4))
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do Aluno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("CPF Aluno");

        try {
            jFormattedTextFieldCPFAluno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCPFAluno.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        jFormattedTextFieldCPFAluno.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jFormattedTextFieldCPFAluno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldCPFAlunoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldCPFAlunoFocusLost(evt);
            }
        });
        jFormattedTextFieldCPFAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldCPFAlunoActionPerformed(evt);
            }
        });

        jButtonBusca.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonBusca.setText("P");
        jButtonBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jFormattedTextFieldCPFAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jButtonBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextFieldCPFAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBusca))
                .addGap(1, 1, 1))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Planos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        jPanel5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel5FocusGained(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("Nome");

        jTablePlano.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTablePlano.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Membros", "Desconto", "Meses"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePlano.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePlano.getTableHeader().setReorderingAllowed(false);
        jTablePlano.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePlanoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePlano);
        if (jTablePlano.getColumnModel().getColumnCount() > 0) {
            jTablePlano.getColumnModel().getColumn(0).setMinWidth(0);
            jTablePlano.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTablePlano.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jComboBoxNomePlano.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jComboBoxNomePlano.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        jComboBoxNomePlano.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNomePlanoItemStateChanged(evt);
            }
        });
        jComboBoxNomePlano.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxNomePlanoMouseClicked(evt);
            }
        });

        jTextFieldID_Plano.setEditable(false);
        jTextFieldID_Plano.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTextFieldID_ItemPlano.setEditable(false);
        jTextFieldID_ItemPlano.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextFieldID_ItemPlano, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldID_Plano, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jComboBoxNomePlano, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxNomePlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTextFieldID_Plano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldID_ItemPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do Aluno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setText("Nome");

        jTextFieldNomeAlunoDados.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldNomeAlunoDados.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldNomeAlunoDados.setEnabled(false);
        jTextFieldNomeAlunoDados.setOpaque(false);
        jTextFieldNomeAlunoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeAlunoDadosActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel15.setText("Email");

        jTextFieldEmailAlunoDados.setEditable(false);
        jTextFieldEmailAlunoDados.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldEmailAlunoDados.setDisabledTextColor(java.awt.Color.black);
        jTextFieldEmailAlunoDados.setEnabled(false);
        jTextFieldEmailAlunoDados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEmailAlunoDadosFocusLost(evt);
            }
        });
        jTextFieldEmailAlunoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailAlunoDadosActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel16.setText("Telefone");

        jFormattedTextFieldTelefone.setEditable(false);
        try {
            jFormattedTextFieldTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldTelefone.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldTelefone.setEnabled(false);
        jFormattedTextFieldTelefone.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel23.setText("ID Aluno");

        jTextFieldID_Aluno.setEditable(false);
        jTextFieldID_Aluno.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldID_Aluno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextFieldID_Aluno.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldID_Aluno.setEnabled(false);
        jTextFieldID_Aluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldID_AlunoActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel29.setText("Endereço");

        jTextFieldEnderecoAlunoDados.setEditable(false);
        jTextFieldEnderecoAlunoDados.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldEnderecoAlunoDados.setDisabledTextColor(java.awt.Color.black);
        jTextFieldEnderecoAlunoDados.setEnabled(false);
        jTextFieldEnderecoAlunoDados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEnderecoAlunoDadosFocusLost(evt);
            }
        });
        jTextFieldEnderecoAlunoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEnderecoAlunoDadosActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel30.setText("Bairro");

        jTextFieldBairroAlunoDados.setEditable(false);
        jTextFieldBairroAlunoDados.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldBairroAlunoDados.setDisabledTextColor(java.awt.Color.black);
        jTextFieldBairroAlunoDados.setEnabled(false);
        jTextFieldBairroAlunoDados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldBairroAlunoDadosFocusLost(evt);
            }
        });
        jTextFieldBairroAlunoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBairroAlunoDadosActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("CPF");

        jFormattedTextFieldCPFDados.setEditable(false);
        try {
            jFormattedTextFieldCPFDados.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCPFDados.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldCPFDados.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("RG");

        jTextFieldRG.setEditable(false);
        jTextFieldRG.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldRG.setDisabledTextColor(java.awt.Color.black);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel31.setText("Cidade");

        jTextFieldCidadeAlunoDados.setEditable(false);
        jTextFieldCidadeAlunoDados.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldCidadeAlunoDados.setDisabledTextColor(java.awt.Color.black);
        jTextFieldCidadeAlunoDados.setEnabled(false);
        jTextFieldCidadeAlunoDados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCidadeAlunoDadosFocusLost(evt);
            }
        });
        jTextFieldCidadeAlunoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCidadeAlunoDadosActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel34.setText("ID Titular");

        jTextFieldID_Titular.setEditable(false);
        jTextFieldID_Titular.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldID_Titular.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextFieldID_Titular.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldID_Titular.setEnabled(false);
        jTextFieldID_Titular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldID_TitularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldID_Aluno, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel29)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldEnderecoAlunoDados, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(jTextFieldNomeAlunoDados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldID_Titular, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldBairroAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel30))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCidadeAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTextFieldRG)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldEmailAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jFormattedTextFieldCPFDados, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(70, 70, 70)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(jTextFieldID_Aluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(jTextFieldID_Titular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldBairroAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFormattedTextFieldCPFDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(25, 25, 25))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEmailAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNomeAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel29)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldEnderecoAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel30)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addGap(25, 25, 25)))
                            .addComponent(jTextFieldCidadeAlunoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(25, 25, 25)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel36.setText("Contrato Nº");

        jTextFieldID_NovoContrato.setEditable(false);
        jTextFieldID_NovoContrato.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldID_NovoContrato.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextFieldID_NovoContrato.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldID_NovoContrato.setEnabled(false);
        jTextFieldID_NovoContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldID_NovoContratoActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Itens do Contrato", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jTableItensContrato.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableItensContrato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Aluno", "Freq.", "Dias", "Valor", "Modalidade", "Horario", "ID_Contrato", "ID_Titular"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableItensContrato.getTableHeader().setReorderingAllowed(false);
        jTableItensContrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableItensContratoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableItensContrato);
        if (jTableItensContrato.getColumnModel().getColumnCount() > 0) {
            jTableItensContrato.getColumnModel().getColumn(0).setMinWidth(0);
            jTableItensContrato.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTableItensContrato.getColumnModel().getColumn(0).setMaxWidth(0);
            jTableItensContrato.getColumnModel().getColumn(2).setMinWidth(40);
            jTableItensContrato.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTableItensContrato.getColumnModel().getColumn(2).setMaxWidth(40);
            jTableItensContrato.getColumnModel().getColumn(4).setMinWidth(70);
            jTableItensContrato.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTableItensContrato.getColumnModel().getColumn(4).setMaxWidth(70);
            jTableItensContrato.getColumnModel().getColumn(4).setCellRenderer(precoRender1);
            jTableItensContrato.getColumnModel().getColumn(6).setMinWidth(70);
            jTableItensContrato.getColumnModel().getColumn(6).setPreferredWidth(70);
            jTableItensContrato.getColumnModel().getColumn(6).setMaxWidth(70);
            jTableItensContrato.getColumnModel().getColumn(7).setMinWidth(0);
            jTableItensContrato.getColumnModel().getColumn(7).setPreferredWidth(0);
            jTableItensContrato.getColumnModel().getColumn(7).setMaxWidth(0);
            jTableItensContrato.getColumnModel().getColumn(8).setMinWidth(0);
            jTableItensContrato.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTableItensContrato.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton3.setText("Remover");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel37.setText("Total Contrato");

        jFormattedTextFieldValorTotalTabela.setEditable(false);
        jFormattedTextFieldValorTotalTabela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalTabela.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextFieldValorTotalTabela.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalTabela.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalTabela.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalTabela.setFocusable(false);
        jFormattedTextFieldValorTotalTabela.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel38.setText("Mensal Contrato");

        jFormattedTextFieldValorTotalMensalContrato.setEditable(false);
        jFormattedTextFieldValorTotalMensalContrato.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalMensalContrato.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalMensalContrato.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalMensalContrato.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalMensalContrato.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jFormattedTextFieldValorTotalTabela1.setEditable(false);
        jFormattedTextFieldValorTotalTabela1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalTabela1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextFieldValorTotalTabela1.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalTabela1.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalTabela1.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalTabela1.setFocusable(false);
        jFormattedTextFieldValorTotalTabela1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jFormattedTextFieldValorTotalMensalContrato1.setEditable(false);
        jFormattedTextFieldValorTotalMensalContrato1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedTextFieldValorTotalMensalContrato1.setDisabledTextColor(java.awt.Color.black);
        jFormattedTextFieldValorTotalMensalContrato1.setFocusCycleRoot(true);
        jFormattedTextFieldValorTotalMensalContrato1.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextFieldValorTotalMensalContrato1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jFormattedTextFieldValorTotalTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jFormattedTextFieldValorTotalMensalContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jFormattedTextFieldValorTotalTabela1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextFieldValorTotalMensalContrato1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldValorTotalMensalContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jFormattedTextFieldValorTotalTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldValorTotalMensalContrato1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldValorTotalTabela1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Titular / Dependentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jTableDependentes.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableDependentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "Data Nascimento", "ID_Titular"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDependentes.getTableHeader().setReorderingAllowed(false);
        jTableDependentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDependentesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableDependentes);
        if (jTableDependentes.getColumnModel().getColumnCount() > 0) {
            jTableDependentes.getColumnModel().getColumn(0).setMinWidth(0);
            jTableDependentes.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTableDependentes.getColumnModel().getColumn(0).setMaxWidth(0);
            jTableDependentes.getColumnModel().getColumn(2).setMinWidth(100);
            jTableDependentes.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableDependentes.getColumnModel().getColumn(2).setMaxWidth(100);
            jTableDependentes.getColumnModel().getColumn(3).setMinWidth(100);
            jTableDependentes.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableDependentes.getColumnModel().getColumn(3).setMaxWidth(100);
            jTableDependentes.getColumnModel().getColumn(4).setMinWidth(0);
            jTableDependentes.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTableDependentes.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel35.setText("Contrato Nº");

        jTextFieldID_Contrato.setEditable(false);
        jTextFieldID_Contrato.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextFieldID_Contrato.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextFieldID_Contrato.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldID_Contrato.setEnabled(false);
        jTextFieldID_Contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldID_ContratoActionPerformed(evt);
            }
        });

        jButtonIncluir.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonIncluir.setText("Incluir");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonEditar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jbSair.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldID_Contrato, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(270, 270, 270)
                                .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbSair)
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(587, 587, 587)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldID_NovoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jTextFieldID_NovoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(jTextFieldID_Contrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonIncluir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSalvar)
                        .addComponent(jButtonEditar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonLimpar)
                        .addComponent(jbSair)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        if (jTableItensContrato.getRowCount() == 0) {
            this.dispose();
        } else {

            JOptionPane.showMessageDialog(this, "Se sair agora todo os dados inseridos serão perdidos !!");
            int option = JOptionPane.showConfirmDialog(rootPane, "Confirma ?");

            if (option == JOptionPane.YES_OPTION) {
                roolbackCadItemContrato();
                System.out.println(id_contrato);
                jFormattedTextFieldCPFAluno.setText(null);
                pesquisa.cpf = null;
                this.dispose();
            } else {

            }
        }


    }//GEN-LAST:event_jbSairActionPerformed

    private void jTableModalidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableModalidadeMouseClicked
        // TODO add your handling code here:
        try {
            int indiceLinha = jTableModalidade.getSelectedRow();
            jTextFieldID_ItemModalidade.setText(jTableModalidade.getValueAt(indiceLinha, 0).toString());
//             jFormattedTextFieldFreqDadosAPM.setText(jTableModalidade.getValueAt(indiceLinha, 1).toString());
//             jFormattedTextFieldValorDadosAPM.setText(jTableModalidade.getValueAt(indiceLinha, 2).toString());

        } catch (NullPointerException e) {
            System.out.println("src.JDAPM.jTableModalidadeMouseClicked()");

        }

    }//GEN-LAST:event_jTableModalidadeMouseClicked

    private void jComboBoxNomeModalidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNomeModalidadeItemStateChanged
//         TODO add your handling code here:
        if (jComboBoxNomeModalidade.getSelectedItem().toString().equals("Selecione")) {
            ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(0);
            ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(9);
        } else {
//            jTextFieldModalidadeAPM.setText(jComboBoxNomeModalidade.getSelectedItem().toString());
            buscarId_Modalidade();
            buscarParaTabelaModalidades();
        }
    }//GEN-LAST:event_jComboBoxNomeModalidadeItemStateChanged

    private void jComboBoxNomeModalidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxNomeModalidadeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNomeModalidadeMouseClicked

    private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1FocusGained

    private void jTextFieldNomeAlunoDadosAPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeAlunoDadosAPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeAlunoDadosAPMActionPerformed

    private void jTextFieldPlanoAPMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPlanoAPMFocusLost

    }//GEN-LAST:event_jTextFieldPlanoAPMFocusLost

    private void jTextFieldPlanoAPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPlanoAPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPlanoAPMActionPerformed

    private void jFormattedTextFieldCPFAlunoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCPFAlunoFocusLost
        if (jFormattedTextFieldCPFAluno.getText().equals("   .   .   -  ")) {

//        } else if (jFormattedTextFieldCPFAluno.getText().contains("0")) {
//
//            buscarCPF();
//            buscarCPFContrato();
        } else {

            carregarcomboboxModalidade();
            carregarcomboboxPlano();
//                  buscarCPF();
            buscarSomenteID_Aluno();
            buscarDependentes();
            pesquisa.cpf = null;
        }


    }//GEN-LAST:event_jFormattedTextFieldCPFAlunoFocusLost

    private void jFormattedTextFieldCPFAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCPFAlunoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jFormattedTextFieldCPFAlunoActionPerformed

    private void jTextFieldEmailAlunoDadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEmailAlunoDadosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailAlunoDadosFocusLost

    private void jTextFieldEmailAlunoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailAlunoDadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailAlunoDadosActionPerformed

    private void jTextFieldModalidadeAPMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldModalidadeAPMFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModalidadeAPMFocusLost

    private void jTextFieldModalidadeAPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModalidadeAPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModalidadeAPMActionPerformed

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        // TODO add your handling code here:
        if (validarCampos() == false) {
            int option = JOptionPane.showConfirmDialog(rootPane, "Confirma ?");

            if (option == JOptionPane.YES_OPTION) {

                salvar();
            } else {

            }
        }

    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        pesquisa.cpf = null;
        limparCamposTodos();
        liberarTodosCamposContrato();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jTextFieldNomeAlunoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeAlunoDadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeAlunoDadosActionPerformed

    private void jTextFieldID_AlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldID_AlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldID_AlunoActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
//        // TODO add your handling code here:


    }//GEN-LAST:event_formWindowGainedFocus

    private void jComboBoxDescManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDescManualActionPerformed
        // TODO add your handling code here:
        if (jComboBoxDescManual.getSelectedItem().toString().equals("Sim")) {
            jFormattedTextFieldDescPlanoAPM.setEditable(true);
        } else {
            jFormattedTextFieldDescPlanoAPM.setEditable(false);
        }
    }//GEN-LAST:event_jComboBoxDescManualActionPerformed

    private void jComboBoxFreqManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFreqManualActionPerformed
        // TODO add your handling code here:
        if (jComboBoxFreqManual.getSelectedItem().toString().equals("Sim")) {
            jFormattedTextFieldFreqDadosAPM.setEditable(true);
        } else {
            jFormattedTextFieldFreqDadosAPM.setEditable(false);
        }
    }//GEN-LAST:event_jComboBoxFreqManualActionPerformed

    private void jComboBoxValorManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxValorManualActionPerformed
        // TODO add your handling code here:
        if (jComboBoxValorManual.getSelectedItem().toString().equals("Sim")) {
            jSpinnerValorMod.setEnabled(true);
        } else {
            jSpinnerValorMod.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxValorManualActionPerformed

    private void jButtonLimparTextAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparTextAreaActionPerformed
        // TODO add your handling code here:
        jTextAreaDiasSemana.setText("");
        clickradio = 0;
        liberaRadios();
        resetRadios();

    }//GEN-LAST:event_jButtonLimparTextAreaActionPerformed


    private void jRadioButtonSegundaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSegundaActionPerformed
        // TODO add your handling code here:
        try {
            clickradio = clickradio + 1;
            validarRadio();
            jTextAreaDiasSemana.append("Seg ");
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O campo Frequencia deve estar Preenchido !!");
            jRadioButtonSegunda.setSelected(false);
        }

    }//GEN-LAST:event_jRadioButtonSegundaActionPerformed

    private void jRadioButtonTercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTercaActionPerformed
        // TODO add your handling code here:
        try {
            clickradio = clickradio + 1;
            validarRadio();
            jTextAreaDiasSemana.append("Ter ");
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O campo Frequencia deve estar Preenchido !!");
            jRadioButtonTerca.setSelected(false);
        }


    }//GEN-LAST:event_jRadioButtonTercaActionPerformed

    private void jRadioButtonQuartaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonQuartaActionPerformed
        // TODO add your handling code here:
        try {
            clickradio = clickradio + 1;

            validarRadio();
            jTextAreaDiasSemana.append("Qua ");
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O campo Frequencia deve estar Preenchido !!");
            jRadioButtonQuarta.setSelected(false);
        }
        System.out.println(clickradio);
    }//GEN-LAST:event_jRadioButtonQuartaActionPerformed

    private void jRadioButtonQuintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonQuintaActionPerformed
        // TODO add your handling code here:
        try {
            clickradio = clickradio + 1;
            validarRadio();
            jTextAreaDiasSemana.append("Qui ");
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O campo Frequencia deve estar Preenchido !!");
            jRadioButtonQuinta.setSelected(false);
        }

    }//GEN-LAST:event_jRadioButtonQuintaActionPerformed

    private void jRadioButtonSextaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSextaActionPerformed
        // TODO add your handling code here:
        try {
            clickradio = clickradio + 1;
            validarRadio();
            jTextAreaDiasSemana.append("Sex ");
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O campo Frequencia deve estar Preenchido !!");
            jRadioButtonSexta.setSelected(false);
        }

    }//GEN-LAST:event_jRadioButtonSextaActionPerformed

    private void jRadioButtonSabadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSabadoActionPerformed
        // TODO add your handling code here:
        try {
            clickradio = clickradio + 1;
            validarRadio();
            jTextAreaDiasSemana.append("Sab ");
        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O campo Frequencia deve estar Preenchido !!");
            jRadioButtonSabado.setSelected(false);
        }

    }//GEN-LAST:event_jRadioButtonSabadoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextFieldID_Contrato.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Aluno selecionado não possui Contrato !!");
        } else {
            gerarContratoIDJD();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldEnderecoAlunoDadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEnderecoAlunoDadosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEnderecoAlunoDadosFocusLost

    private void jTextFieldEnderecoAlunoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEnderecoAlunoDadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEnderecoAlunoDadosActionPerformed

    private void jTextFieldBairroAlunoDadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldBairroAlunoDadosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBairroAlunoDadosFocusLost

    private void jTextFieldBairroAlunoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBairroAlunoDadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBairroAlunoDadosActionPerformed

    private void jTextFieldCidadeAlunoDadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCidadeAlunoDadosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCidadeAlunoDadosFocusLost

    private void jTextFieldCidadeAlunoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCidadeAlunoDadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCidadeAlunoDadosActionPerformed

    private void jTextFieldID_ContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldID_ContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldID_ContratoActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here
        jButtonIncluir.setEnabled(false);
        jButtonSalvar.setEnabled(true);
        jButtonEditar.setEnabled(false);
        liberarTodosCamposContrato();
        carregarcomboboxModalidade();
        carregarcomboboxPlano();
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        atualizar();

    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jTextFieldID_NovoContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldID_NovoContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldID_NovoContratoActionPerformed

    private void jFormattedTextFieldDescPlanoAPMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDescPlanoAPMFocusLost
        // TODO add your handling code here:
        calcularValorTotal();
    }//GEN-LAST:event_jFormattedTextFieldDescPlanoAPMFocusLost

    private void jButtonBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscaActionPerformed
        // TODO add your handling code here:
        jFormattedTextFieldCPFAluno.setEnabled(true);
        limparCamposTodos();
        liberarTodosCamposContrato();
        JDPesquisaGlobalAluno pesquisa = new JDPesquisaGlobalAluno(login, rootPaneCheckingEnabled);
        pesquisa.setLocationRelativeTo(null);
        pesquisa.setVisible(true);
        jFormattedTextFieldCPFAluno.setText(pesquisa.cpf);
        jFormattedTextFieldCPFAluno.requestFocus();
    }//GEN-LAST:event_jButtonBuscaActionPerformed

    private void jFormattedTextFieldCPFAlunoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCPFAlunoFocusGained
        // TODO add your handling code here:


    }//GEN-LAST:event_jFormattedTextFieldCPFAlunoFocusGained

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:


    }//GEN-LAST:event_formFocusGained

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowLostFocus

    private void jPanel5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel5FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5FocusGained

    private void jComboBoxNomePlanoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxNomePlanoMouseClicked
        // TODO add your handling code here:
        if (jComboBoxNomeModalidade.getSelectedItem().toString().equals("Selecione")) {
            ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(0);
            ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(9);
        } else {
            //            jTextFieldModalidadeAPM.setText(jComboBoxNomeModalidade.getSelectedItem().toString());
            buscarId_Modalidade();
            buscarParaTabelaModalidades();
        }
    }//GEN-LAST:event_jComboBoxNomePlanoMouseClicked

    private void jComboBoxNomePlanoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNomePlanoItemStateChanged
        // TODO add your handling code here:
        if (jComboBoxNomePlano.getSelectedItem().toString().equals("Selecione")) {
            ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(0);
            ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(9);

        } else {
            //            jTextFieldPlanoAPM.setText(jComboBoxNomePlano.getSelectedItem().toString());
            buscarId_Plano();
            buscarParaTabelaPlanos();
        }
    }//GEN-LAST:event_jComboBoxNomePlanoItemStateChanged

    private void jTablePlanoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanoMouseClicked
        // TODO add your handling code here:
        try {
            int indiceLinha = jTablePlano.getSelectedRow();
            jTextFieldID_ItemPlano.setText(jTablePlano.getValueAt(indiceLinha, 0).toString());

        } catch (NullPointerException | java.lang.ArrayIndexOutOfBoundsException e) {
            System.out.println("src.JDAPM.jTablePlanoMouseClicked()");
        }
    }//GEN-LAST:event_jTablePlanoMouseClicked

    private void jTableDependentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDependentesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableDependentesMouseClicked

    private void jTableItensContratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableItensContratoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableItensContratoMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(rootPane, "Deseja adicionar outro item ?");
        try {
            if (option == JOptionPane.CANCEL_OPTION) {

            } else if (jFormattedTextFieldHorario.getText().equals("  :   /   :  ")) {
                JOptionPane.showMessageDialog(null, "Preencha o horario");
                jFormattedTextFieldHorario.requestFocus();
            } else if (jTextAreaDiasSemana.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Dias da Semana nao pode ser vazio !");
                jTextAreaDiasSemana.requestFocus();

            } else if (option == JOptionPane.YES_OPTION) {
                calcularValorTotalContrato();
                addItensTabela();

                limparCamposContratoADD();
                limparCamposAluno();
            } else {
                calcularValorTotalContrato();
                calcularValorMensalContrato();
                addItensTabela();
                limparCamposContratoADD();
                limparCamposAluno();

            }

        } catch (java.lang.NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Verifique se todos os campos estão preenchidos !!");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jTableItensContrato.getRowCount() == 1) {
            jFormattedTextFieldValorTotalMensalContrato.setText(null);
            jFormattedTextFieldValorTotalMensalContrato1.setText(null);
        }
        removerItensTabela();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldID_TitularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldID_TitularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldID_TitularActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {

            int indiceLinha = jTablePlano.getSelectedRow();
            int indiceLinha2 = jTableModalidade.getSelectedRow();
            int indiceLinha3 = jTableDependentes.getSelectedRow();

            if (jTextFieldID_ItemPlano.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Selecione o Plano na tabela !!");
                jTablePlano.requestFocus();
            } else if (jTextFieldID_ItemModalidade.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Selecione A Modalidade na tabela !!");
                jTableModalidade.requestFocus();
            } else if (jTableDependentes.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Selecione o Aluno na tabela !!");
                jTableDependentes.requestFocus();
            } else {

                jTextFieldPlanoAPM.setText(jComboBoxNomePlano.getSelectedItem().toString());
                jFormattedTextFieldDescPlanoAPM.setText(jTablePlano.getValueAt(indiceLinha, 2).toString());
                jFormattedTextFieldQtdParcelas.setText(jTablePlano.getValueAt(indiceLinha, 3).toString());
                jTablePlano.setEnabled(false);
                jFormattedTextFieldFreqDadosAPM.setText(jTableModalidade.getValueAt(indiceLinha2, 1).toString());
                jSpinnerValorMod.setValue(jTableModalidade.getValueAt(indiceLinha2, 2));

                String a = jTableModalidade.getValueAt(indiceLinha2, 2).toString();
                System.out.println("kkkkkkkkkkkkkkkkkkkkkkk'" + a + "'");
                jTextFieldModalidadeAPM.setText(jComboBoxNomeModalidade.getSelectedItem().toString());
                calcularValorTotal();
//            limparCamposDadosContrato2();

                jTextFieldID_Aluno.setText(jTableDependentes.getValueAt(indiceLinha3, 0).toString());
                buscarID_Aluno();
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Selecione Uma Linha Preenchida!");
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        buscarID_Contrato();
        id_contrato = Integer.parseInt(jTextFieldID_NovoContrato.getText());
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (jTableItensContrato.getRowCount() == 0) {
            this.dispose();
        } else {

            int option = JOptionPane.showConfirmDialog(rootPane, "Se sair agora todo os dados inseridos serão perdidos !! \n Confirma ?");

            if (option == JOptionPane.YES_OPTION) {
                roolbackCadItemContrato();
                System.out.println(id_contrato);
                jFormattedTextFieldCPFAluno.setText(null);
                pesquisa.cpf = null;
                this.dispose();
            } else {

            }
        }

    }//GEN-LAST:event_formWindowClosing

    private void jPanel7MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseMoved
        // TODO add your handling code here:
        if (((Number) jSpinnerValorMod.getValue()).intValue() <= 0) {

        } else {
            System.out.println("src.JDAPM.jPanel7MouseMoved()");
            calcularValorTotal();
        }
    }//GEN-LAST:event_jPanel7MouseMoved

    public boolean roolbackContrato() {
        try {
            con = ConexaoFactory.getConnection();
            Statement stmt = con.createStatement();

            stmt.executeUpdate("DELETE FROM cad_item_contrato WHERE id_contrato='" + id_contrato + "'");
//            JOptionPane.showMessageDialog(this, "Rotina não completada !!\n As alterações no Banco de Dados Foram Excluidas !!");

        } catch (ClassNotFoundException | NumberFormatException | SQLException e) {

        }
        return true;
    }

    public boolean roolbackCadItemContrato() {
        try {

            con = ConexaoFactory.getConnection();
            Statement stmt = con.createStatement();

            stmt.executeUpdate("DELETE FROM cad_item_contrato WHERE id_contrato='" + id_contrato + "'");
//            JOptionPane.showMessageDialog(this, "Rotina não completada !!\n As alterações no Banco de Dados Foram Excluidas !!");

        } catch (ClassNotFoundException | NumberFormatException | SQLException e) {

        }
        return true;
    }

    public boolean roolbackParcelaContrato() {
        try {

            con = ConexaoFactory.getConnection();
            Statement stmt = con.createStatement();

            stmt.executeUpdate("DELETE FROM parcela_contrato WHERE id_contrato='" + id_contrato + "'");
//            JOptionPane.showMessageDialog(this, "Rotina não completada !!\n As alterações no Banco de Dados Foram Excluidas !!");

        } catch (ClassNotFoundException | NumberFormatException | SQLException e) {

        }
        return true;
    }

    public boolean roolbackAll() {
        try {

            con = ConexaoFactory.getConnection();
            Statement stmt = con.createStatement();
            stmt.executeUpdate("DELETE FROM contrato WHERE id_contrato='" + id_contrato + "' and status=1 ");
            stmt.executeUpdate("DELETE FROM cad_item_contrato WHERE id_contrato='" + id_contrato + "'");
            stmt.executeUpdate("DELETE FROM parcela_contrato WHERE id_contrato='" + id_contrato + "'");
//            JOptionPane.showMessageDialog(this, "Rotina não completada !!\n As alterações no Banco de Dados Foram Excluidas !!");
        } catch (ClassNotFoundException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return true;
    }

    private boolean validarCampos() {

        if (jTableItensContrato.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum item foi adicionado ao contrato !!");
            jTableItensContrato.requestFocus();
        } else if (jFormattedTextFieldValorTotalMensalContrato.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Itens não foram finalizados !!");
        }
        return false;
    }

    private void limparCamposContratoADD() {

        jFormattedTextFieldFreqDadosAPM.setText("");
        jFormattedTextFieldHorario.setText(null);
        jSpinnerValorMod.setValue(0);
        jFormattedTextFieldValorTotalContrato.setText("");
        jFormattedTextFieldValorTotalMensal.setText("");
        jTextAreaDiasSemana.setText("");
        jTextFieldID_Aluno.setText("");
        jTextFieldID_Contrato.setText("");
        jTextFieldID_ItemModalidade.setText("");
        jTextFieldID_Modalidade.setText("");
        jTextFieldModalidadeAPM.setText("");
        jTextFieldNomeAlunoDadosAPM.setText("");
        jComboBoxDescManual.setSelectedItem("Não");
        jComboBoxFreqManual.setSelectedItem("Não");
        jComboBoxNomeModalidade.setSelectedItem("Selecione");
        jComboBoxNomePlano.setSelectedItem("Selecione");
        jComboBoxValorManual.setSelectedItem("Não");
        clickradio = 0;
        liberaRadios();
        resetRadios();
    }

    private void removerItensTabela() {
        try {
//            EmprestimoBean emprestimo = new EmprestimoBean();
//            LivroBean livro = new LivroBean();
//            EstoqueDAO dao = new EstoqueDAO();
//            livro.setId_livro(Integer.parseInt(jTextFieldIDLivro.getText()));
//            emprestimo.setEmprestimoID(Integer.parseInt(jTextFieldNumEmprestimo.getText()));
            int linha = jTableItensContrato.getSelectedRow();
            String id_aluno = jTableItensContrato.getValueAt(linha, 0).toString();
            String id_titular = jTableItensContrato.getValueAt(linha, 8).toString();

            int id_aluno1 = Integer.parseInt(id_aluno);
            int id_titular1 = Integer.parseInt(id_titular);

            con = ConexaoFactory.getConnection();
            Statement stmt = con.createStatement();
            stmt.executeUpdate("DELETE FROM cad_item_contrato WHERE id_aluno='" + id_aluno1 + "' and id_titular='" + id_titular1 + "'");
            ((DefaultTableModel) jTableItensContrato.getModel()).removeRow(jTableItensContrato.getSelectedRow());
            jFormattedTextFieldValorTotalTabela.setText(null);
            jFormattedTextFieldValorTotalTabela1.setText(null);

//            jTextFieldIDLivro.setText("");
        } catch (ClassNotFoundException | SQLException e) {
        }

    }

    private boolean addItensTabela() {

        try {

            AlunoBean aluno = new AlunoBean();
            ItemContratoBean item = new ItemContratoBean();
            String id_contrato_ = jTextFieldID_NovoContrato.getText().trim();
            String id_aluno = jTextFieldID_Aluno.getText().trim();
            String nome_aluno = jTextFieldNomeAlunoDados.getText().trim();
            String frequencia = jFormattedTextFieldFreqDadosAPM.getText().trim();
            String dias = jTextAreaDiasSemana.getText().trim();
            Double valor = Double.parseDouble(jFormattedTextFieldValorTotalMensal2.getText());
            String modalidade = jTextFieldModalidadeAPM.getText().trim();
            String horario = jFormattedTextFieldHorario.getText().trim();
            String id_titular = jTextFieldID_Titular.getText().trim();

            item.setId_contrato(Integer.parseInt(jTextFieldID_NovoContrato.getText()));
            item.setId_titular(Integer.parseInt(jTextFieldID_Titular.getText()));
            item.setId_modalidade(Integer.parseInt(jTextFieldID_Modalidade.getText()));
            item.setNome_aluno(jTextFieldNomeAlunoDados.getText());
            item.setFrequencia(Integer.parseInt(jTextFieldID_Modalidade.getText()));
            item.setDias(jTextAreaDiasSemana.getText());
            item.setHorario(jFormattedTextFieldHorario.getText());
            item.setModalidade(jTextFieldModalidadeAPM.getText());
            item.setValor(Double.parseDouble(jFormattedTextFieldValorTotalMensal2.getText()));
            item.setId_item_modalidade(Integer.parseInt(jTextFieldID_ItemModalidade.getText()));
            item.setId_aluno(Integer.parseInt(jTextFieldID_Aluno.getText()));
            DefaultTableModel val = (DefaultTableModel) jTableItensContrato.getModel();
            val.addRow(new Object[]{id_aluno, nome_aluno, frequencia, dias, valor, modalidade, horario, id_contrato_, id_titular});

            con = ConexaoFactory.getConnection();
            String sql = "INSERT INTO cad_item_contrato(id_contrato,id_titular,id_modalidade,id_item_modalidade,id_aluno,nome_aluno,frequencia,dias,valor,modalidade,horario) VALUES (?,?,?,?,?,?,?,?,?,?,?)";

            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, item.getId_contrato());
            ps.setInt(2, item.getId_titular());
            ps.setInt(3, item.getId_modalidade());
            ps.setInt(4, item.getId_item_modalidade());
            ps.setInt(5, item.getId_aluno());
            ps.setString(6, item.getNome_aluno());
            ps.setInt(7, item.getFrequencia());
            ps.setString(8, item.getDias());
            ps.setDouble(9, item.getValor());
            ps.setString(10, item.getModalidade());
            ps.setString(11, item.getHorario());

            return ps.executeUpdate() != PreparedStatement.EXECUTE_FAILED;

        } catch (ClassNotFoundException | SQLException | HeadlessException e) {

        }
        status = 0;
        return true;

    }

    public void buscarID_Contrato() {
        iniciarBD();
        try {
            con = ConexaoFactory.getConnection();
            rsListar = stmtListar.executeQuery("SELECT * FROM contrato");
            if (rsListar.last()) {
                int valor = rsListar.getInt("id_contrato");
                id_contrato = valor + 1;
                jTextFieldID_NovoContrato.setText(Integer.toString(id_contrato));
            }
            if (!rsListar.last()) {
                jTextFieldID_NovoContrato.setText("1");
            }
        } catch (Exception e) {
        }

    }

    public void chamarParcelas() {
        JDParcelas jdparcelas = new JDParcelas(null, rootPaneCheckingEnabled);
        jdparcelas.setLocationRelativeTo(null);
        jdparcelas.setVisible(true);

    }

    private void gerarContratoJD() {
        try {

            Toolkit toolkit = Toolkit.getDefaultToolkit();
            Dimension screenSize = toolkit.getScreenSize();

            JDialog viewer = new JDialog(new javax.swing.JFrame(), "Visualização do Contrato", true);
            viewer.setBounds(0, 0, screenSize.width, screenSize.height);
            viewer.setLocationRelativeTo(null);
            Map parameters = new HashMap();
            parameters.put("REPORT_CONNECTION", conecta.Conexao());
            conecta.executaSQL("SELECT\n"
                    + "     cad_item_contrato.`id_item_contrato` AS cad_item_contrato_id_item_contrato,\n"
                    + "     cad_item_contrato.`id_contrato` AS cad_item_contrato_id_contrato,\n"
                    + "     cad_item_contrato.`id_titular` AS cad_item_contrato_id_titular,\n"
                    + "     cad_item_contrato.`id_modalidade` AS cad_item_contrato_id_modalidade,\n"
                    + "     cad_item_contrato.`id_item_modalidade` AS cad_item_contrato_id_item_modalidade,\n"
                    + "     cad_item_contrato.`id_aluno` AS cad_item_contrato_id_aluno,\n"
                    + "     cad_item_contrato.`nome_aluno` AS cad_item_contrato_nome_aluno,\n"
                    + "     cad_item_contrato.`frequencia` AS cad_item_contrato_frequencia,\n"
                    + "     cad_item_contrato.`dias` AS cad_item_contrato_dias,\n"
                    + "     cad_item_contrato.`valor` AS cad_item_contrato_valor,\n"
                    + "     cad_item_contrato.`modalidade` AS cad_item_contrato_modalidade,\n"
                    + "     cad_item_contrato.`horario` AS cad_item_contrato_horario,\n"
                    + "     cad_aluno.`id_aluno` AS cad_aluno_id_aluno,\n"
                    + "     cad_aluno.`nome` AS cad_aluno_nome,\n"
                    + "     cad_aluno.`endereco` AS cad_aluno_endereco,\n"
                    + "     cad_aluno.`bairro` AS cad_aluno_bairro,\n"
                    + "     cad_aluno.`telefone` AS cad_aluno_telefone,\n"
                    + "     cad_aluno.`cidade` AS cad_aluno_cidade,\n"
                    + "     cad_aluno.`cpf` AS cad_aluno_cpf,\n"
                    + "     cad_aluno.`rg` AS cad_aluno_rg,\n"
                    + "     cad_aluno.`email` AS cad_aluno_email,\n"
                    + "     cad_aluno.`data_nasc` AS cad_aluno_data_nasc,\n"
                    + "     cad_aluno.`ativo` AS cad_aluno_ativo,\n"
                    + "     cad_aluno.`id_titular` AS cad_aluno_id_titular,\n"
                    + "     contrato.`id_contrato` AS contrato_id_contrato,\n"
                    + "     contrato.`total_parcelas` AS contrato_total_parcelas,\n"
                    + "     contrato.`valor_mensal` AS contrato_valor_mensal\n"
                    + "FROM\n"
                    + "     `cad_aluno` cad_aluno INNER JOIN `contrato` contrato ON cad_aluno.`id_aluno` = contrato.`id_titular`\n"
                    + "     INNER JOIN `cad_item_contrato` cad_item_contrato ON contrato.`id_titular` = cad_item_contrato.`id_titular`\n"
                    + "     AND cad_item_contrato.`id_contrato` = contrato.`id_contrato`\n"
                    + "WHERE\n"
                    + "     cad_item_contrato.`id_titular` ='" + Integer.parseInt(jTextFieldID_Titular.getText()) + "'");
            JRResultSetDataSource relatResult = new JRResultSetDataSource(conecta.rs);
            JasperPrint jpPrint = JasperFillManager.fillReport("C:\\Program Files\\Movimente\\MoviMente\\src\\relatorios\\ContratoAluno.jasper", parameters, relatResult);
            JasperViewer jv = new JasperViewer(jpPrint, false);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);

        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatorio! \nErro:" + e);
        }
    }

    private void gerarContratoIDJD() {
        try {

            Toolkit toolkit = Toolkit.getDefaultToolkit();
            Dimension screenSize = toolkit.getScreenSize();

            JDialog viewer = new JDialog(new javax.swing.JFrame(), "Visualização do Contrato", true);
            viewer.setBounds(0, 0, screenSize.width, screenSize.height);
            viewer.setLocationRelativeTo(null);
            conecta.executaSQL("select nome_aluno,endereco_aluno,bairro_aluno,cidade_aluno,rg_aluno,cpf_aluno,nome_modalidade,horario,dias,valor_mensal,total_parcelas from contrato WHERE id_contrato='" + jTextFieldID_Contrato.getText() + "'");
            JRResultSetDataSource relatResult = new JRResultSetDataSource(conecta.rs);
            JasperPrint jpPrint = JasperFillManager.fillReport("src/relatorios/ContratoAluno.jasper", new HashMap(), relatResult);
            JasperViewer jv = new JasperViewer(jpPrint, false);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);

        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatorio! \nErro:" + e);
        }
    }

    private boolean validarcamposvazios() {

        if (jFormattedTextFieldDescPlanoAPM.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor Digite o Desconto!", "Digite o Desconto", WIDTH);
            jFormattedTextFieldDescPlanoAPM.requestFocus();
        } else if (jFormattedTextFieldFreqDadosAPM.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor Digite a Frequencia!", "Digite a Frequencia", WIDTH);
            jFormattedTextFieldFreqDadosAPM.requestFocus();
        } else if (jSpinnerValorMod.getValue().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor digite O Valor!", "Digite o Valor", WIDTH);
            jSpinnerValorMod.requestFocus();
        } else if (jFormattedTextFieldHorario.getText().equals("  :  ")) {
            JOptionPane.showMessageDialog(null, "Por favor informe O Horario!", "Digite o Horario", WIDTH);
            jFormattedTextFieldHorario.requestFocus();
        } else if (jTextAreaDiasSemana.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor informe os Dias da Semana!", "Digite os Dias da Semana", WIDTH);
            jTextAreaDiasSemana.requestFocus();

        } else {
//            JOptionPane.showMessageDialog(null, " Funcionario " + jTextFieldNovoNome.getText() + " atualizado");
            return false;
        }

        return true;
    }

    private void validarRadio() {

        int freq = Integer.parseInt(jFormattedTextFieldFreqDadosAPM.getText());
        if (clickradio >= freq) {
            bloqueiaRadios();
            System.out.println(freq);
        }
    }

    public void salvar() {

        ContratoBean contrato = new ContratoBean();
        ContratoDAO dao = new ContratoDAO();
        try {

            Date data_criacao = new Date();
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            df.format(data_criacao);
            System.out.println(data_criacao);
            String dataF = df.format(data_criacao);
            contrato.setId_titular(Integer.parseInt(jTextFieldID_Titular.getText()));
            contrato.setId_plano(Integer.parseInt(jTextFieldID_Plano.getText()));
            contrato.setId_item_plano(Integer.parseInt(jTextFieldID_ItemPlano.getText()));
            contrato.setData_adesao(data_criacao);
            contrato.setData_criacao(data_criacao);
            contrato.setUsuario(nomeusuario);
            contrato.setQtd_parcelas(Integer.parseInt(jFormattedTextFieldQtdParcelas.getText()));
            contrato.setValor_total_contrato(Double.parseDouble(jFormattedTextFieldValorTotalTabela1.getText()));
            contrato.setValor_mensal(Double.parseDouble(jFormattedTextFieldValorTotalMensalContrato1.getText()));
            contrato.setStatus(1);
            dao.inserir(contrato);
            status = 0;
            id_contrato = Integer.parseInt(jTextFieldID_NovoContrato.getText());
            qtd_parcelas = Integer.parseInt(jFormattedTextFieldQtdParcelas.getText());
            valor_mensalidade = Double.parseDouble(jFormattedTextFieldValorTotalMensalContrato1.getText());
            valor_total_contrato = Double.parseDouble(jFormattedTextFieldValorTotalTabela1.getText());
            chamarParcelas();
            if (JDParcelas.statusParcelas == 1) {
                status = 0;
                JOptionPane.showMessageDialog(rootPane, "Aguarde ... \n Gerando Contrato !!");
                gerarContratoJD();
                limparCamposTodos();
                jFormattedTextFieldCPFAluno.requestFocus();
                this.dispose();
                JDAPM apm = new JDAPM(null, rootPaneCheckingEnabled);
                apm.setLocationRelativeTo(null);
                apm.setVisible(true);
            } else {
                this.dispose();
            }
        } catch (HeadlessException | ClassNotFoundException | NumberFormatException e) {

        }

    }

    public void atualizar() {
//
//        ContratoBean contrato = new ContratoBean();
//        ContratoDAO dao = new ContratoDAO();
//        try {
//            contrato.setId_contrato(Integer.parseInt(jTextFieldID_Contrato.getText()));
//            contrato.setId_aluno(Integer.parseInt(jTextFieldID_Aluno.getText()));
//            contrato.setId_plano(Integer.parseInt(jTextFieldID_Plano.getText()));
//            contrato.setId_modalidade(Integer.parseInt(jTextFieldID_Modalidade.getText()));
//            contrato.setId_item_plano(Integer.parseInt(jTextFieldID_ItemPlano.getText()));
//            contrato.setId_item_modalidade(Integer.parseInt(jTextFieldID_ItemModalidade.getText()));
//            contrato.setNome_plano(jTextFieldPlanoAPM.getText());
//            contrato.setNome_modalidade(jTextFieldModalidadeAPM.getText());
//            contrato.setNome_aluno(jTextFieldNomeAlunoDados.getText());
//            contrato.setEndereco_aluno(jTextFieldEnderecoAlunoDados.getText());
//            contrato.setBairro_aluno(jTextFieldBairroAlunoDados.getText());
//            contrato.setCidade_aluno(jTextFieldCidadeAlunoDados.getText());
//            contrato.setRg_aluno(jTextFieldRG.getText());
//            contrato.setTelefone_aluno(jFormattedTextFieldTelefone.getText());
//            contrato.setEmail_aluno(jTextFieldEmailAlunoDados.getText());
//            contrato.setDesc_plano(Double.parseDouble(jFormattedTextFieldDescPlanoAPM.getText()));
//            contrato.setFreq_modalidade(Integer.parseInt(jFormattedTextFieldFreqDadosAPM.getText()));
//            contrato.setHorario(jFormattedTextFieldHorario.getText());
//            contrato.setDias(jTextAreaDiasSemana.getText());
//            contrato.setValor(Double.parseDouble(jFormattedTextFieldValorTotalMensal.getText()));
//            dao.altera(contrato);
//            jButtonSalvar.setEnabled(false);
//            jButtonIncluir.setEnabled(true);
//            JOptionPane.showMessageDialog(rootPane, "Aguarde ... \n Gerando Contrato !!");
//            gerarContratoJD();
//            jFormattedTextFieldCPFAluno.requestFocus();
//
//        } catch (HeadlessException | ClassNotFoundException | NumberFormatException e) {
//
//        }
    }

    private void bloqueiaRadios() {

        jRadioButtonSegunda.setEnabled(false);
        jRadioButtonTerca.setEnabled(false);
        jRadioButtonQuarta.setEnabled(false);
        jRadioButtonQuinta.setEnabled(false);
        jRadioButtonSexta.setEnabled(false);
        jRadioButtonSabado.setEnabled(false);

    }

    private void liberaRadios() {

        jRadioButtonSegunda.setEnabled(true);
        jRadioButtonTerca.setEnabled(true);
        jRadioButtonQuarta.setEnabled(true);
        jRadioButtonQuinta.setEnabled(true);
        jRadioButtonSexta.setEnabled(true);
        jRadioButtonSabado.setEnabled(true);

    }

    private void resetRadios() {

        jRadioButtonSegunda.setSelected(false);
        jRadioButtonTerca.setSelected(false);
        jRadioButtonQuarta.setSelected(false);
        jRadioButtonQuinta.setSelected(false);
        jRadioButtonSexta.setSelected(false);
        jRadioButtonSabado.setSelected(false);

    }

    private void calcularValorTotal() {
        try {

            format = NumberFormat.getCurrencyInstance();
            format.setMinimumFractionDigits(2);

            double valororiginal = Double.parseDouble(jSpinnerValorMod.getValue().toString());
            double desc = Integer.parseInt(jFormattedTextFieldDescPlanoAPM.getText());
            int qtdparcelas = Integer.parseInt(jFormattedTextFieldQtdParcelas.getText());

            double difdesc = (valororiginal * desc) / 100;
            double resultado = valororiginal - difdesc;
            double resultadototal = resultado * qtdparcelas;
            jFormattedTextFieldValorTotalMensal.setText(String.valueOf(format.format(resultado)));
            jFormattedTextFieldValorTotalContrato.setText(String.valueOf(format.format(resultadototal)));
            jFormattedTextFieldValorTotalMensal2.setText(String.valueOf((resultado)));
            jFormattedTextFieldValorTotalContrato2.setText(String.valueOf((resultadototal)));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao Obter Valor Total!");
        }
    }

    private void calcularValorTotalContrato() {
        format = NumberFormat.getCurrencyInstance();
        format.setMinimumFractionDigits(2);
        double valor = Double.parseDouble(jFormattedTextFieldValorTotalContrato2.getText());

        int num = jTableItensContrato.getRowCount();
        System.out.println(num);
        try {
            if (jTableItensContrato.getRowCount() <= 0) {
                System.out.println("src.JDAPM.calcularValorTotalContrato()");
                jFormattedTextFieldValorTotalTabela.setText(String.valueOf(format.format(valor)));
                jFormattedTextFieldValorTotalTabela1.setText(String.valueOf(valor));
            } else {
                double valortotal = Double.parseDouble(jFormattedTextFieldValorTotalTabela1.getText());
                double resultado = valor + valortotal;
                jFormattedTextFieldValorTotalTabela.setText(String.valueOf(format.format(resultado)));
                jFormattedTextFieldValorTotalTabela1.setText(String.valueOf(resultado));

                System.out.println(num);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao Obter Valor Total!");
        }
    }

    private void calcularValorMensalContrato() {
        format = NumberFormat.getCurrencyInstance();
        format.setMinimumFractionDigits(2);
        try {

            double valortotal = Double.parseDouble(jFormattedTextFieldValorTotalTabela1.getText());
            int meses = Integer.parseInt(jFormattedTextFieldQtdParcelas.getText());
            double resultado = valortotal / meses;
            jFormattedTextFieldValorTotalMensalContrato.setText(String.valueOf(format.format(resultado)));
            jFormattedTextFieldValorTotalMensalContrato1.setText(String.valueOf(resultado));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao Obter Valor Total!");
        }
    }

    private void carregarcomboboxPlano() {
        try {
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_plano ORDER BY id_plano DESC ");
            while (rsListar.next()) {
                jComboBoxNomePlano.addItem(rsListar.getString(2));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro " + e.getMessage());
        }
    }

    private void carregarcomboboxModalidade() {
        try {
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_modalidade ORDER BY id_modalidade DESC ");
            while (rsListar.next()) {
                jComboBoxNomeModalidade.addItem(rsListar.getString(2));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro " + e.getMessage());
        }
    }

    private void buscarId_Modalidade() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT id_modalidade FROM cad_modalidade WHERE nome='" + jComboBoxNomeModalidade.getSelectedItem().toString() + "'");

            if (rsListar.next()) {
                jTextFieldID_Modalidade.setText(rsListar.getString(1));
            } else {

            }

        } catch (SQLException ex) {

        }
    }

    private void buscarId_Plano() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT id_plano FROM cad_plano WHERE nome='" + jComboBoxNomePlano.getSelectedItem().toString() + "'");

            if (rsListar.next()) {
                jTextFieldID_Plano.setText(rsListar.getString(1));
            } else {

            }

        } catch (SQLException ex) {

        }
    }

    private void buscarParaTabelaPlanos() {

        ((DefaultTableModel) jTablePlano.getModel()).setNumRows(0);
        ((DefaultTableModel) jTablePlano.getModel()).setNumRows(9);
        iniciarBD();
        try {
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_item_plano WHERE id_plano='" + jTextFieldID_Plano.getText() + "' ORDER BY membro asc");
            montarTabelaPlanos();
        } catch (SQLException e) {

        }

    }

    private void montarTabelaPlanos() {
        int linha = 0;

        try {
            while (rsListar.next()) {
                String id = rsListar.getString("id_item_plano");
                String membro = rsListar.getString("membro");
                String desconto = rsListar.getString("desconto");
                String meses = rsListar.getString("meses");

                jTablePlano.getModel().setValueAt(id, linha, 0);
                jTablePlano.getModel().setValueAt(membro, linha, 1);
                jTablePlano.getModel().setValueAt(desconto, linha, 2);
                jTablePlano.getModel().setValueAt(meses, linha, 3);

                linha++;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
    }

    private void buscarParaTabelaModalidades() {

        ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(9);
        iniciarBD();
        try {
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_item_modalidade WHERE id_modalidade='" + jTextFieldID_Modalidade.getText() + "' ORDER BY frequencia asc");
            montarTabelaModalidades();
        } catch (SQLException e) {

        }
    }

    private void montarTabelaModalidades() {
        int linha = 0;
        try {
            while (rsListar.next()) {
                String id = rsListar.getString("id_item_modalidade");
                String frequencia = rsListar.getString("frequencia");
                Double valor = rsListar.getDouble("valor");

                jTableModalidade.getModel().setValueAt(id, linha, 0);
                jTableModalidade.getModel().setValueAt(frequencia, linha, 1);
                jTableModalidade.getModel().setValueAt(valor, linha, 2);

                linha++;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
    }

    private void buscarCPF() {
        try {

            limparCamposDadosContrato();
            liberarTodosCamposContrato();
            AlunoBean aluno = new AlunoBean();
            aluno.setCpf(jFormattedTextFieldCPFAluno.getText());
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_aluno WHERE cpf='" + jFormattedTextFieldCPFAluno.getText() + "'");

            if (rsListar.next()) {
                jTextFieldID_Aluno.setText(rsListar.getString(1));
                jTextFieldID_Titular.setText(rsListar.getString(1));
                jTextFieldNomeAlunoDados.setText(rsListar.getString(2));
                jTextFieldNomeAlunoDadosAPM.setText(rsListar.getString(2));
                jTextFieldEmailAlunoDados.setText(rsListar.getString(9));
                jFormattedTextFieldTelefone.setText(rsListar.getString(5));

                jTextFieldEnderecoAlunoDados.setText(rsListar.getString(3));
                jTextFieldBairroAlunoDados.setText(rsListar.getString(4));
                jTextFieldCidadeAlunoDados.setText(rsListar.getString(6));
                jFormattedTextFieldCPFDados.setText(rsListar.getString(7));
                jTextFieldRG.setText(rsListar.getString(8));

            } else if (!jFormattedTextFieldCPFAluno.equals("   .   .   -  ")) {

            }
            if (!jFormattedTextFieldCPFAluno.getText().equals("   .   .   -  ") && (!rsListar.first())) {
                JOptionPane.showMessageDialog(null, "Aluno Não cadastrado para este CPF!!");
                jFormattedTextFieldCPFAluno.requestFocus();
                jFormattedTextFieldCPFAluno.setText("");
            }

        } catch (SQLException ex) {

        }
    }

    private void buscarSomenteID_Aluno() {
        try {

            limparCamposDadosContrato();
            liberarTodosCamposContrato();
            AlunoBean aluno = new AlunoBean();
            aluno.setCpf(jFormattedTextFieldCPFAluno.getText());
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_aluno WHERE cpf='" + jFormattedTextFieldCPFAluno.getText() + "'");

            if (rsListar.next()) {
                jTextFieldID_Aluno.setText(rsListar.getString(1));
                jTextFieldID_Titular.setText(rsListar.getString(1));
            }
        } catch (SQLException ex) {

        }
    }

    private void buscarCPFContrato() {
        try {
            AlunoBean aluno = new AlunoBean();
////            aluno.setCpf(jFormattedTextFieldCPFAluno.getText());
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM contrato WHERE id_titular='" + Integer.parseInt(jTextFieldID_Titular.getText()) + "'");

            if (rsListar.next()) {

                bloquearTodosCamposContrato();
                jTextFieldID_Contrato.setText(rsListar.getString(1));
                jTextFieldID_Plano.setText(rsListar.getString(3));
                jTextFieldID_Modalidade.setText(rsListar.getString(4));
                jTextFieldID_ItemPlano.setText(rsListar.getString(5));
                jTextFieldID_ItemModalidade.setText(rsListar.getString(6));
                jTextFieldPlanoAPM.setText(rsListar.getString(7));
                jTextFieldNomeAlunoDadosAPM.setText(rsListar.getString(9));
                jFormattedTextFieldDescPlanoAPM.setText(rsListar.getString(17));
                jTextFieldModalidadeAPM.setText(rsListar.getString(8));
                jFormattedTextFieldFreqDadosAPM.setText(rsListar.getString(18));
                jSpinnerValorMod.setValue(rsListar.getDouble(21));
                jFormattedTextFieldHorario.setText(rsListar.getString(19));
                jFormattedTextFieldValorTotalMensal.setText(rsListar.getString(21));
                jTextAreaDiasSemana.setText(rsListar.getString(20));
                jFormattedTextFieldQtdParcelas.setText(rsListar.getString(25));
                jFormattedTextFieldValorTotalContrato.setText(rsListar.getString(26));

                if (jTextAreaDiasSemana.getText().contains("Seg ")) {
                    jRadioButtonSegunda.setSelected(true);
                }
                if (jTextAreaDiasSemana.getText().contains("Ter ")) {
                    jRadioButtonTerca.setSelected(true);
                }
                if (jTextAreaDiasSemana.getText().contains("Qua ")) {
                    jRadioButtonQuarta.setSelected(true);
                }
                if (jTextAreaDiasSemana.getText().contains("Qui ")) {
                    jRadioButtonQuinta.setSelected(true);
                }
                if (jTextAreaDiasSemana.getText().contains("Sex ")) {
                    jRadioButtonSexta.setSelected(true);
                }
                if (jTextAreaDiasSemana.getText().contains("Sab ")) {
                    jRadioButtonSabado.setSelected(true);
                }
                JOptionPane.showMessageDialog(rootPane, "Aluno já possui contrato ativo!");
            } else if (!jFormattedTextFieldCPFAluno.equals("   .   .   -  ")) {

            }
            if (!jFormattedTextFieldCPFAluno.getText().equals("   .   .   -  ") && (!rsListar.first())) {
                JOptionPane.showMessageDialog(null, "Aluno Não cadastrado para este CPF!!");
                jFormattedTextFieldCPFAluno.requestFocus();
                jFormattedTextFieldCPFAluno.setText("");
            }
            System.out.println("src.JDAPM.buscarCPFContrato()");

        } catch (SQLException ex) {

        }
    }

    private void buscarID_Aluno() {
        try {

            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_aluno WHERE id_aluno='" + Integer.parseInt(jTextFieldID_Aluno.getText()) + "'");

            if (rsListar.next()) {
//                jTextFieldID_Aluno.setText(rsListar.getString(1));
                jTextFieldNomeAlunoDados.setText(rsListar.getString(2));
                jTextFieldNomeAlunoDadosAPM.setText(rsListar.getString(2));
                jTextFieldEmailAlunoDados.setText(rsListar.getString(9));
                jFormattedTextFieldTelefone.setText(rsListar.getString(5));

                jTextFieldEnderecoAlunoDados.setText(rsListar.getString(3));
                jTextFieldBairroAlunoDados.setText(rsListar.getString(4));
                jTextFieldCidadeAlunoDados.setText(rsListar.getString(6));
                jFormattedTextFieldCPFDados.setText(rsListar.getString(7));
                jTextFieldRG.setText(rsListar.getString(8));
            }
        } catch (SQLException ex) {

        }
    }

    private void buscarDependentes() {
        try {

//            limparCamposDadosContrato();
//            liberarTodosCamposContrato();
            AlunoBean aluno = new AlunoBean();
            aluno.setCpf(jFormattedTextFieldCPFAluno.getText());
            aluno.setId_titular(Integer.parseInt(jTextFieldID_Aluno.getText()));
            System.out.println(aluno.getId_titular());
            System.out.println(aluno.getCpf());
            iniciarBD();
            rsListar = stmtListar.executeQuery("SELECT * FROM cad_aluno WHERE id_titular='" + Integer.parseInt(jTextFieldID_Titular.getText()) + "'");
            montarTabelaDependentes();
        } catch (SQLException ex) {

        }
    }

    private void montarTabelaDependentes() {
        int linha = 0;

        try {
            while (rsListar.next()) {
                String id_aluno = rsListar.getString("id_aluno");
                String nome = rsListar.getString("nome");
                String data_nascimento = rsListar.getString("data_nasc");
                String id_titular = rsListar.getString("id_titular");
                String cpf = rsListar.getString("cpf");

                jTableDependentes.getModel().setValueAt(id_aluno, linha, 0);
                jTableDependentes.getModel().setValueAt(nome, linha, 1);
                jTableDependentes.getModel().setValueAt(data_nascimento, linha, 3);
                jTableDependentes.getModel().setValueAt(cpf, linha, 2);
                jTableDependentes.getModel().setValueAt(id_titular, linha, 4);

                if (cpf.equals("   .   .   -  ")) {
                    jTableDependentes.getModel().setValueAt("Dependente", linha, 2);
                }

                linha++;

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
    }

    private void iniciarBD() {
        try {
            con = ConexaoFactory.getConnection();
            stmtListar = con.createStatement();

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
    }

    private void limparTabelas() {
        ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(9);
        ((DefaultTableModel) jTablePlano.getModel()).setNumRows(0);
        ((DefaultTableModel) jTablePlano.getModel()).setNumRows(9);
    }

    private void limparCamposAluno() {
        jTextFieldID_Aluno.setText("");
        jTextFieldBairroAlunoDados.setText("");
        jTextFieldCidadeAlunoDados.setText("");
        jTextFieldEmailAlunoDados.setText("");
        jTextFieldEnderecoAlunoDados.setText("");
        jFormattedTextFieldTelefone.setText(null);
        jTextFieldRG.setText("");
        jFormattedTextFieldCPFDados.setText(null);
        jTextFieldNomeAlunoDados.setText("");
        jTextFieldNomeAlunoDadosAPM.setText("");
    }

    private void limparCamposTodos() {

        jFormattedTextFieldCPFAluno.setText(null);
        jFormattedTextFieldCPFDados.setText(null);
        jFormattedTextFieldDescPlanoAPM.setText("");
        jFormattedTextFieldFreqDadosAPM.setText("");
        jFormattedTextFieldHorario.setText("");
        jFormattedTextFieldQtdParcelas.setText("");
        jFormattedTextFieldTelefone.setText(null);
        jSpinnerValorMod.setValue(0);
        jFormattedTextFieldValorTotalContrato.setText("");
        jFormattedTextFieldValorTotalMensal.setText("");
        jTextAreaDiasSemana.setText("");
        jTextFieldBairroAlunoDados.setText("");
        jTextFieldCidadeAlunoDados.setText("");
        jTextFieldEmailAlunoDados.setText("");
        jTextFieldEnderecoAlunoDados.setText("");
        jTextFieldID_Aluno.setText("");
        jTextFieldID_Contrato.setText("");
        jTextFieldID_ItemModalidade.setText("");
        jTextFieldID_ItemPlano.setText("");
        jTextFieldID_Modalidade.setText("");
        jTextFieldID_Plano.setText("");
        jTextFieldModalidadeAPM.setText("");
        jTextFieldNomeAlunoDados.setText("");
        jTextFieldNomeAlunoDadosAPM.setText("");
        jTextFieldPlanoAPM.setText("");
        jTextFieldRG.setText("");
        jComboBoxDescManual.setSelectedItem("Não");
        jComboBoxFreqManual.setSelectedItem("Não");
        jComboBoxNomeModalidade.setSelectedItem("Selecione");
        jComboBoxNomePlano.setSelectedItem("Selecione");
        jComboBoxValorManual.setSelectedItem("Não");
        resetRadios();
        limparTabelas();

    }

    private void limparCamposDadosContrato2() {

        jFormattedTextFieldFreqDadosAPM.setText("");
        jFormattedTextFieldHorario.setText("");
        jSpinnerValorMod.setValue(0);
        jFormattedTextFieldValorTotalContrato.setText("");
        jFormattedTextFieldValorTotalMensal.setText("");
        jTextAreaDiasSemana.setText("");
        jTextFieldID_Contrato.setText("");
        jTextFieldID_ItemModalidade.setText("");
        jTextFieldID_Modalidade.setText("");
        jTextFieldModalidadeAPM.setText("");
        jTextFieldNomeAlunoDados.setText("");
        jTextFieldNomeAlunoDadosAPM.setText("");

        jComboBoxDescManual.setSelectedItem("Não");
        jComboBoxFreqManual.setSelectedItem("Não");
        jComboBoxNomeModalidade.setSelectedItem("Selecione");

        jComboBoxValorManual.setSelectedItem("Não");
        ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(0);
        ((DefaultTableModel) jTableModalidade.getModel()).setNumRows(9);
        resetRadios();

    }

    private void limparCamposDadosContrato() {

        jFormattedTextFieldDescPlanoAPM.setText("");
        jFormattedTextFieldFreqDadosAPM.setText("");
        jFormattedTextFieldHorario.setText("");
        jFormattedTextFieldQtdParcelas.setText("");

        jSpinnerValorMod.setValue(0);
        jFormattedTextFieldValorTotalContrato.setText("");
        jFormattedTextFieldValorTotalMensal.setText("");
        jTextAreaDiasSemana.setText("");

        jTextFieldID_Aluno.setText("");
        jTextFieldID_Contrato.setText("");
        jTextFieldID_ItemModalidade.setText("");
        jTextFieldID_ItemPlano.setText("");
        jTextFieldID_Modalidade.setText("");
        jTextFieldID_Plano.setText("");
        jTextFieldModalidadeAPM.setText("");
        jTextFieldNomeAlunoDados.setText("");
        jTextFieldNomeAlunoDadosAPM.setText("");
        jTextFieldPlanoAPM.setText("");
        jComboBoxDescManual.setSelectedItem("Não");
        jComboBoxFreqManual.setSelectedItem("Não");
        jComboBoxNomeModalidade.setSelectedItem("Selecione");
        jComboBoxNomePlano.setSelectedItem("Selecione");
        jComboBoxValorManual.setSelectedItem("Não");
        resetRadios();
        limparTabelas();

    }

    private void bloquearTodosCamposContrato() {

        jButtonLimparTextArea.setEnabled(false);
        jFormattedTextFieldCPFAluno.setEnabled(false);
        jComboBoxNomePlano.setEnabled(false);
        jTablePlano.setEnabled(false);
        jComboBoxNomeModalidade.setEnabled(false);
        jTableModalidade.setEnabled(false);
        jComboBoxDescManual.setEnabled(false);
        jComboBoxFreqManual.setEnabled(false);
        jComboBoxValorManual.setEnabled(false);
        jFormattedTextFieldHorario.setEnabled(false);
        jRadioButtonSegunda.setEnabled(false);
        jRadioButtonTerca.setEnabled(false);
        jRadioButtonQuarta.setEnabled(false);
        jRadioButtonQuinta.setEnabled(false);
        jRadioButtonSexta.setEnabled(false);
        jRadioButtonSabado.setEnabled(false);
        jTextAreaDiasSemana.setEnabled(false);
    }

    private void liberarTodosCamposContrato() {
//        jFormattedTextFieldCPFAluno.setText(null);

        jButtonLimparTextArea.setEnabled(true);
        jFormattedTextFieldCPFAluno.setEnabled(true);
        jComboBoxNomePlano.setEnabled(true);
        jTablePlano.setEnabled(true);
        jTableModalidade.setEnabled(true);
        jComboBoxNomeModalidade.setEnabled(true);
        jComboBoxDescManual.setEnabled(true);
        jComboBoxFreqManual.setEnabled(true);
        jComboBoxValorManual.setEnabled(true);
        jFormattedTextFieldHorario.setEnabled(true);
        jRadioButtonSegunda.setEnabled(true);
        jRadioButtonTerca.setEnabled(true);
        jRadioButtonQuarta.setEnabled(true);
        jRadioButtonQuinta.setEnabled(true);
        jRadioButtonSexta.setEnabled(true);
        jRadioButtonSabado.setEnabled(true);
        jTextAreaDiasSemana.setEnabled(true);
    }

    private void lookandfell() {
        try {

            UIManager.setLookAndFeel(new SyntheticaPlainLookAndFeel());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ParseException | UnsupportedLookAndFeelException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar o tema = " + erro);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAPM.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDAPM dialog = new JDAPM(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonBusca;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonLimparTextArea;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxDescManual;
    private javax.swing.JComboBox<String> jComboBoxFreqManual;
    private javax.swing.JComboBox<String> jComboBoxNomeModalidade;
    private javax.swing.JComboBox<String> jComboBoxNomePlano;
    private javax.swing.JComboBox<String> jComboBoxValorManual;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPFAluno;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPFDados;
    private javax.swing.JFormattedTextField jFormattedTextFieldDescPlanoAPM;
    private javax.swing.JFormattedTextField jFormattedTextFieldFreqDadosAPM;
    private javax.swing.JFormattedTextField jFormattedTextFieldHorario;
    private javax.swing.JFormattedTextField jFormattedTextFieldQtdParcelas;
    private javax.swing.JFormattedTextField jFormattedTextFieldTelefone;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalContrato;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalContrato1;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalContrato2;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalMensal;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalMensal2;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalMensalContrato;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalMensalContrato1;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalTabela;
    private javax.swing.JFormattedTextField jFormattedTextFieldValorTotalTabela1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButtonQuarta;
    private javax.swing.JRadioButton jRadioButtonQuinta;
    private javax.swing.JRadioButton jRadioButtonSabado;
    private javax.swing.JRadioButton jRadioButtonSegunda;
    private javax.swing.JRadioButton jRadioButtonSexta;
    private javax.swing.JRadioButton jRadioButtonTerca;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerValorMod;
    private javax.swing.JTable jTableDependentes;
    private javax.swing.JTable jTableItensContrato;
    private javax.swing.JTable jTableModalidade;
    private javax.swing.JTable jTablePlano;
    private javax.swing.JTextArea jTextAreaDiasSemana;
    private javax.swing.JTextField jTextFieldBairroAlunoDados;
    private javax.swing.JTextField jTextFieldCidadeAlunoDados;
    private javax.swing.JTextField jTextFieldEmailAlunoDados;
    private javax.swing.JTextField jTextFieldEnderecoAlunoDados;
    private javax.swing.JTextField jTextFieldID_Aluno;
    private javax.swing.JTextField jTextFieldID_Contrato;
    private javax.swing.JTextField jTextFieldID_ItemModalidade;
    private javax.swing.JTextField jTextFieldID_ItemPlano;
    private javax.swing.JTextField jTextFieldID_Modalidade;
    private javax.swing.JTextField jTextFieldID_NovoContrato;
    private javax.swing.JTextField jTextFieldID_Plano;
    private javax.swing.JTextField jTextFieldID_Titular;
    private javax.swing.JTextField jTextFieldModalidadeAPM;
    private javax.swing.JTextField jTextFieldNomeAlunoDados;
    private javax.swing.JTextField jTextFieldNomeAlunoDadosAPM;
    private javax.swing.JTextField jTextFieldPlanoAPM;
    private javax.swing.JTextField jTextFieldRG;
    private javax.swing.JButton jbSair;
    private util.PrecoRender precoRender1;
    // End of variables declaration//GEN-END:variables
}
